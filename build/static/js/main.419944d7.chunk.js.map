{"version":3,"sources":["dispatcher.js","constants/ActionTypes/Session.js","constants/ActionTypes.js","constants/ActionTypes/UI.js","constants/ActionTypes/ScrapingThread.js","constants/ActionTypes/Table.js","constants/ActionTypes/Users.js","store/UI.js","components/AppSnackbar.jsx","constants/SocketEvents.js","models/User.js","store/session.js","constants/Environment.js","socket-handlers/session.js","store/ScrapingThreads.js","helpers/validate.js","actions/UI.js","models/ApiError.js","store/Tables.js","actions/Table.js","constants/Tables.js","actions/ScrapingThread.js","socket-handlers/ScrapingThread.js","socket-handlers/Table.js","socket.js","api/_Api.js","api/User.js","actions/Session.js","helpers/time.js","constants/ScrapingThread.js","components/Tables/Pagination.jsx","components/Tables/AddTrackUrl.jsx","components/SpinnerGrow.jsx","views/AddTrackUrls.jsx","assets/l4c.svg","views/Login.jsx","components/Tables/ManageUsers.jsx","views/ManageUsers.jsx","views/AddUser.jsx","api/ScrapingThread.js","components/Filters/CountryFilter.jsx","helpers/utils.js","constants/DateRanges.js","components/Filters/DateCountryFilter.jsx","components/Tables/ManageUrls.jsx","views/ManageUrls.jsx","views/FAQ.jsx","components/AppView.jsx","components/AppContents.jsx","components/AppPreload.jsx","theme.jsx","App.js","reportWebVitals.js","index.js","models/TableData.js","constants/Errors.js"],"names":["dispatcher","Dispatcher","SessionActionTypes","require","keyMirror","USER_LOGOUT","AUTHENTICATION_TOKEN_RECEIVED","USER_BALANCE_CHANGED","SESSION_CONNECTED","SESSION_DISCONNECTED","HANDSHAKE_SOCKET_ID","USER_AUTHENTICATED","USER_DATA_UPDATED","AUTHENTICATION_FAILED","IS_AUTHENTICATING","API_ERROR","Session","UI","ON_LOGIN_MODAL_TOGGLED","ON_LOGIN_MODAL_OPENED","ON_LOGIN_MODAL_CLOSED","ON_SIDEBAR_TOGGLE","USER_PROFILE_MODAL_TOGGLE","SIDEBAR_CONTENT_CHANGING","SIDEBAR_CONTENT_CHANGED","SHOW_SNACKBAR","GOTO_VIEW","TOGGLE_PRINT_RATES_USD","ERROR","UNFOCUS_FROM_APP_DRAWER","FOCUS_ON_APP_DRAWER","CHANGE_APP_DRAWER_VIEW","ScrapingThread","THREAD_CREATION_REQUESTED","THREAD_CREATED","IS_LOADING_THREADS","TABLE_DATA_RECEIVED","TABLE_DATA_REQUESTED","THREAD_MODIFIED","SCRAPING_THREAD_STATUS_CHANGED","Table","DATA_CREATED","SERVER_DATA_RECEIVED","DATA_UPDATED","ROW_ADDED","DATA_MODIFIED","User","USER_ADDED","USER_DELETED","uiStore","params","messages","sidebar","isOpen","width","views","current","modals","login","userProfile","event","callback","this","on","removeListener","data","emit","message","length","shift","push","lastMessageReceived","Date","getTime","lastMessageSent","EventEmitter","register","action","willEmitOwnChange","actionType","ActionTypes","emitChange","Alert","props","elevation","variant","useStyles","makeStyles","theme","close","padding","spacing","error","background","color","Snackbars","React","useState","snackPack","setSnackPack","open","setOpen","undefined","messageInfo","setMessageInfo","useEffect","prev","slice","addChangeListener","showSnackbar","removeChangeListener","severity","key","handleClose","reason","handleExited","classes","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","onExited","className","clsx","Fragment","Button","size","onClick","IconButton","aria-label","SocketEvents","AUTHENTICATE","USER_DATA","LAST_CHAT_MESSAGES","SEND_CHAT_MESSAGE","SUCCESS","CREATE_SCRAPING_THREAD","SCRAPING_THREAD_CREATED","TABLE_SYNC","ADD_USER","TABLE_DATA","SCRAPING_THREAD_SYNC","obj","hasOwnProperty","userData","id","username","every","c","sessionStore","dispatchToken","connectionInitiatedTimestamp","_isAuthenticated","user","authentication_token","localStorage","email","authentication_token_sent_timestamp","sessionId","isAuthenticated","isAuthenticating","getAuthenticationToken","setAuthenticationToken","_ret","getItem","setItem","avatar","isIt","_hasTriedAuthentication","_isAuthenticating","setUser","logout","setIsAuthenticating","ENDPOINT","ENDPOINT_SOCKET","BASE_URL","CDN_BASE_URL","DEBUG","bindSessionSocketHandler","socket","INITIAL_STATUS","status","sessionActions","onInitialStatusReceived","onUserDataReceived","errorCode","onApiError","successMessage","onApiSuccess","onAuthenticationFailed","scrapingThreadsStore","threads","threadId","threadData","thread","tableName","Object","keys","includes","isWaiting","td","getTableData","TableData","isLoading","tableData","hasTableData","console","log","rows","totalRowsCount","willEmitChange","str","match","dispatch","ApiError","variables","errors","val","tableStore","previousTableData","getByTableName","deleteTableData","hash","tableHash","foundHash","getByHash","row","replaceable","findIndex","storeTableData","updateTableData","alterRow","addRow","filter","page","rowsPerPage","previousRowCount","countryFilter","dateRange","createdTableData","keymirror","ADD_TRACK_URL","USERS_ADMIN","url","uiActions","Errors","ERR_INVALID_URL","trim","validate","sendMessage","ERR_UNAUTHENTICATED","toString","scrapingThread","TableConstants","scrapingThreadActions","bindSocketHandler","tableActions","dup","socketInstance","io","connect","EnvironmentConstants","reconnect","secure","rejectUnauthorized","transports","bindScrapingThreadSocketHandler","bindTableSocketHandler","initialize","String","prototype","trimChar","charToRemove","string","charAt","substring","MakeRequest","method","endpoint","constants","headers","Promise","resolve","requestOptions","body","JSON","stringify","fetch","then","response","json","isError","ERR_UNKNOWN","catch","e","_req","UrlTracking","password","post","userIds","a","UserApi","Authenticate","setTimeout","tryAuthentication","storedAuthenticationToken","userAuthenticate","apiError","err","onSessionIdReceived","ID_RECEIVED","isValid","window","location","reload","timeSince","date","moment","fromNow","Statuses","root","flexShrink","marginLeft","TablePaginationActions","useTheme","count","onChangePage","disabled","direction","Math","ceil","max","table","minWidth","tableRow","height","backgroundColor","palette","hover","emptyRow","paddingTop","paddingBottom","THIS_TABLE_NAME","TableNames","AddTrackUrlTable","setTableData","HasTableData","defaults","IsLoadingResults","hasInheritedRows","isLoadingResults","rowsLength","Array","isArray","syncTableData","newPage","newRowsPerPage","onTableRowsDataUpdated","foundTable","onTableRowsDataModified","onScrapingThreadCreated","renderThreadStatus","icon","innerText","caption","Tooltip","title","ErrorOutline","style","BugReport","HourglassEmpty","text","hint","scrapedJobs","auditsCount","DoneAll","externalLinksFound","Box","alignItems","flexWrap","display","justifyContent","flexDirection","mr","Typography","noWrap","whiteSpace","lineHeight","TableBody","map","x","TableRow","TableCell","Skeleton","animation","align","index","innerRow","component","scope","href","target","Today","age","uuid","isJustFilling","hasFilterApplied","unfilteredRowsCount","colspan","primary","random","_createRow","renderEmptyRows","TableFooter","TablePagination","rowsPerPageOptions","label","value","colSpan","SelectProps","inputProps","native","onChangeRowsPerPage","parseInt","ActionsComponent","memo","spinner","maxWidth","maxHeight","borderRadius","SpinnerGrow","div","initial","scale","opacity","animate","transition","repeat","Infinity","duration","useStyles2","CustomPaginationActionsTable","UrlInputValue","setUrlInputValue","useHistory","createThread","scrapingThreadsActions","TableContainer","Paper","FormControl","fullWidth","margin","OutlinedInput","placeholder","onChange","evt","onKeyPress","startAdornment","InputAdornment","position","disableElevation","startIcon","endIcon","Divider","AddTrackUrl","formPaper","inputField","marginTop","marginBottom","LoginView","IsAuthenticating","Email","setEmail","Password","setPassword","history","storedAuthToken","performAuthentication","authData","onUserAuthenticatingChanged","src","LinksForCashIcon","marginRight","alt","type","CircularProgress","to","textAlign","ManageUsersTable","SelectedRows","setSelectedRows","min","confirm","useConfirm","deleteUser","userId","description","DeleteUsers","res","success","renderName","toWrap","name","stickyHeader","TableHead","Checkbox","checked","Badge","badgeContent","AddCircle","RouterLink","alreadySelectedIndex","splice","onRowSelectionChanged","AssignmentTurnedIn","fontSize","_renderHint","newFilter","filterTimeout","ManageUsersView","Filter","setFilter","f","clearTimeout","ManageUsers","paper","box","saveBtn","main","abortBtn","dark","hide","AddUserView","ShowPassword","setShowPassword","IsAdmin","setIsAdmin","FullName","setFullName","Username","setUsername","InputErrors","setInputErrors","hasError","field","onGoBack","goBack","performAddUser","AddUser","isAdmin","result","vars","ArrowBack","FormGroup","InputLabel","htmlFor","required","labelWidth","aria-describedby","FormHelperText","Mail","Person","endAdornment","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","FormControlLabel","control","Check","threadIds","select","border","outline","chips","chip","noLabel","selectedCountriesContainer","overflow","isFunction","constructor","call","apply","startDate","endDate","setDate","getDate","day","getDay","setHours","getMonday","getFullYear","getMonth","setMonth","ynow","mnow","MenuProps","PaperProps","ITEM_HEIGHT","getStyles","personName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","DateCountryFilter","Countries","onCountriesChanged","onDateRangeChanged","DateFilterOpen","setDateFilterOpen","SelectedCountries","setSelectedCountries","DateRange","setDateRange","anchorRef","useRef","MenuOpen","setMenuOpen","toggleDateRangeFilter","handleCountriesChanged","selectedCountries","postiion","zIndex","definedRanges","DateRanges","toggle","ButtonGroup","FilterList","KeyboardArrowDown","_startDateText","Intl","DateTimeFormat","format","_endDateText","FastForward","renderFilteringDateValue","aria-controls","aria-haspopup","ref","Public","keepMounted","contains","anchorEl","MenuItem","button","countryIndex","clone","toggleCountry","country","disableRipple","ManageUrlsTable","newDateRange","newCountryFilter","ScrapingThreadApi","Delete","availableCountries","_countryFilter","_dateRange","ManageUrlsView","onFilterChanged","FAQView","appView","overflowY","flex","backdrop","drawer","AppView","exact","path","AddTrackUrlsView","AddUsersView","drawerWidth","body1","appBar","transitions","create","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","drawerHeader","drawerOpen","drawerClose","overflowX","breakpoints","up","toolbar","mixins","content","flexGrow","orange","getContrastText","deepOrange","purple","deepPurple","drawerPaper","AppContents","getUser","setIsAuthenticated","onAuthenticationStatusChanged","useLocation","CssBaseline","AppBar","Toolbar","pathname","AddCircleOutline","Link","Drawer","List","ListItem","logoIconSvg","ListItemIcon","Avatar","nameParts","split","renderShortLetters","ListItemText","Timeline","selected","Help","SupervisedUserCircle","Code","PowerSettingsNew","contentShift","AppPreload","top","left","createMuiTheme","App","ShowPreload","setShowPreload","onIsAuthenticatingChanged","canAuthenticate","ThemeProvider","defaultTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","values","createHash","hashable","join","reduce","b","Buffer","from","ERR_INSUFFICIENT_BALANCE","ERR_BETS_CLOSED","ERR_INVALID_CURRENCY","ERR_ROUND_INEXISTENT","ERR_MESSAGE_TOO_SHORT","ERR_MESSAGE_TOO_LONG","ERR_INVALID_BET","ERR_WAIT_BEFORE_SENDING_MESSAGE","ERR_INVALID_PICTURE","ERR_USER_NOT_FOUND","ERR_CREDENTIALS_INVALID","ERR_INSUFFICIENT_PERMISSIONS","ERR_CHECK_FIELDS","ERR_EMAIL_ALREADY_REGISTERED","ERR_USERNAME_ALREADY_REGISTERED","ERR_CANNOT_DELETE_YOURSELF"],"mappings":"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","file":"static/js/main.419944d7.chunk.js","sourcesContent":["import { Dispatcher } from \"flux\";\r\nconst dispatcher = new Dispatcher();\r\nexport default dispatcher;\r\n","const keyMirror = require(\"keymirror\");\r\n\r\nconst SessionActionTypes = keyMirror({\r\n  USER_LOGOUT: null,\r\n  AUTHENTICATION_TOKEN_RECEIVED: null,\r\n  USER_BALANCE_CHANGED: null,\r\n  SESSION_CONNECTED: null,\r\n  SESSION_DISCONNECTED: null,\r\n  HANDSHAKE_SOCKET_ID: null,\r\n  USER_AUTHENTICATED: null,\r\n  USER_DATA_UPDATED: null,\r\n  AUTHENTICATION_FAILED: null,\r\n  IS_AUTHENTICATING: null,\r\n  API_ERROR: null,\r\n});\r\n\r\nexport default SessionActionTypes;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport SessionActionTypes from \"./ActionTypes/Session\";\r\nimport UIActionTypes from \"./ActionTypes/UI\";\r\nimport ScrapingThreadActionTypes from \"./ActionTypes/ScrapingThread\";\r\nimport TableActionTypes from \"./ActionTypes/Table\";\r\nimport UserActionTypes from \"./ActionTypes/Users\";\r\n\r\nexport default {\r\n  Session: SessionActionTypes,\r\n  UI: UIActionTypes,\r\n  ScrapingThread: ScrapingThreadActionTypes,\r\n  Table: TableActionTypes,\r\n  User: UserActionTypes,\r\n};\r\n","import keyMirror from \"keymirror\";\r\n\r\nconst ActionTypes = keyMirror({\r\n  ON_LOGIN_MODAL_TOGGLED: null,\r\n  ON_LOGIN_MODAL_OPENED: null,\r\n  ON_LOGIN_MODAL_CLOSED: null,\r\n  ON_SIDEBAR_TOGGLE: null,\r\n  USER_PROFILE_MODAL_TOGGLE: null,\r\n  SIDEBAR_CONTENT_CHANGING: null,\r\n  SIDEBAR_CONTENT_CHANGED: null,\r\n  SHOW_SNACKBAR: null,\r\n  GOTO_VIEW: null,\r\n  TOGGLE_PRINT_RATES_USD: null,\r\n  ERROR: null,\r\n  API_ERROR: null,\r\n  UNFOCUS_FROM_APP_DRAWER: null,\r\n  FOCUS_ON_APP_DRAWER: null,\r\n  CHANGE_APP_DRAWER_VIEW: null,\r\n});\r\n\r\nexport default ActionTypes;\r\n","import keyMirror from \"keymirror\";\r\n\r\nconst ActionTypes = {\r\n  THREAD_CREATION_REQUESTED: \"SCRAPING_THREAD_CREATION_REQUESTED\",\r\n  THREAD_CREATED: \"SCRAPING_THREAD_CREATED\",\r\n  IS_LOADING_THREADS: \"IS_LOADING_SCRAPING_THREADS\",\r\n  TABLE_DATA_RECEIVED: \"SCRAPING_THREADS_TABLE_DATA_RECEIVED\",\r\n  TABLE_DATA_REQUESTED: \"SCRAPING_THREADS_TABLE_DATA_REQUESTED\",\r\n  THREAD_MODIFIED: \"SCRAPING_THREAD_MODIFIED\",\r\n  SCRAPING_THREAD_STATUS_CHANGED: \"SCRAPING_THREAD_STATUS_CHANGED\",\r\n};\r\n\r\nexport default ActionTypes;\r\n","const TableActionTypes = {\r\n  DATA_CREATED: \"TABLE_DATA_HASH_CREATED\",\r\n  SERVER_DATA_RECEIVED: \"TABLE_SERVER_DATA_RECEIVED\",\r\n  DATA_UPDATED: \"TABLE_DATA_HASH_CHANGED\",\r\n  ROW_ADDED: \"TABLE_ROW_ADDED\",\r\n  DATA_MODIFIED: \"TABLE_DATA_MODIFIED\",\r\n};\r\n\r\nexport default TableActionTypes;\r\n","const TableActionTypes = {\r\n  USER_ADDED: \"ADMIN_USER_ADDED\",\r\n  USER_DELETED: \"ADMIN_USER_DELETED\",\r\n};\r\n\r\nexport default TableActionTypes;\r\n","import { EventEmitter } from \"events\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nclass UIStore extends EventEmitter {\r\n  constructor(params) {\r\n    super(params);\r\n    this.messages = [];\r\n    this.sidebar = {\r\n      isOpen: true,\r\n      width: 320,\r\n    };\r\n    this.views = {\r\n      current: \"\",\r\n    };\r\n    this.modals = {\r\n      login: { isOpen: false },\r\n      userProfile: {\r\n        isOpen: false,\r\n      },\r\n    };\r\n  }\r\n\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  storeMessageReceived(message) {\r\n    // Keep a maximum stack of 255 messages received. Why not?\r\n    if (this.messages.length > 244) this.messages.shift();\r\n    this.messages.push(message);\r\n    this.lastMessageReceived = new Date().getTime();\r\n  }\r\n  storeMessageSent() {\r\n    this.lastMessageSent = new Date().getTime();\r\n  }\r\n\r\n  getSidebar() {\r\n    return this.sidebar;\r\n  }\r\n  sidebarIsOpen() {\r\n    return this.sidebar.isOpen;\r\n  }\r\n  getSidebarWidth() {\r\n    return this.sidebar.width;\r\n  }\r\n  toggleSidebar() {\r\n    this.sidebar.isOpen = !this.sidebar.isOpen;\r\n  }\r\n  toggleLoginModal() {\r\n    this.modals.login.isOpen = !this.modals.login.isOpen;\r\n  }\r\n  loginModalIsOpen() {\r\n    return this.modals.login.isOpen;\r\n  }\r\n}\r\n\r\nconst uiStore = new UIStore();\r\n\r\ndispatcher.register((action) => {\r\n  let willEmitOwnChange = true;\r\n  switch (action.actionType) {\r\n    case ActionTypes.UI.SHOW_SNACKBAR:\r\n      break;\r\n    default:\r\n      willEmitOwnChange = false;\r\n      break;\r\n  }\r\n\r\n  willEmitOwnChange && uiStore.emitChange(action.actionType, action.data);\r\n});\r\n\r\nexport default uiStore;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\nimport uiStore from \"../store/UI\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport clsx from \"clsx\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  close: {\r\n    padding: theme.spacing(0.5),\r\n  },\r\n  error: {\r\n    background: \"red\",\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\n// Need to pass handleClick(message) as prop\r\nexport default function Snackbars() {\r\n  const [snackPack, setSnackPack] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [messageInfo, setMessageInfo] = React.useState(undefined);\r\n  React.useEffect(() => {\r\n    if (snackPack.length && !messageInfo) {\r\n      // Set a new snack when we don't have an active one\r\n      setMessageInfo({ ...snackPack[0] });\r\n      setSnackPack((prev) => prev.slice(1));\r\n      setOpen(true);\r\n    } else if (snackPack.length && messageInfo && open) {\r\n      // Close an active snack when a new one is added\r\n      setOpen(false);\r\n    }\r\n  }, [snackPack, messageInfo, open]);\r\n\r\n  useEffect(() => {\r\n    uiStore.addChangeListener(ActionTypes.UI.SHOW_SNACKBAR, showSnackbar); // When component mounted, subscribe to dispatcher events.\r\n\r\n    return () => {\r\n      // On component unmounting, remove previous listener.\r\n      uiStore.removeChangeListener(ActionTypes.UI.SHOW_SNACKBAR, showSnackbar);\r\n    };\r\n  });\r\n\r\n  const showSnackbar = ({ message, severity }) => {\r\n    setSnackPack((prev) => [\r\n      ...prev,\r\n      { severity, message, key: new Date().getTime() },\r\n    ]);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleExited = () => {\r\n    setMessageInfo(undefined);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      {messageInfo && messageInfo.severity && (\r\n        <Snackbar\r\n          key={messageInfo ? messageInfo.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={2750}\r\n          onClose={handleClose}\r\n          onExited={handleExited}\r\n        >\r\n          <Alert\r\n            onClose={handleClose}\r\n            severity={messageInfo && messageInfo.severity}\r\n            className={clsx({\r\n              [classes.error]: messageInfo && messageInfo.severity === \"error\",\r\n            })}\r\n          >\r\n            {messageInfo ? messageInfo.message : undefined}\r\n          </Alert>\r\n        </Snackbar>\r\n      )}\r\n      {(!messageInfo || !messageInfo.severity) && (\r\n        <Snackbar\r\n          key={messageInfo ? messageInfo.key : undefined}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          open={open}\r\n          autoHideDuration={2750}\r\n          onClose={handleClose}\r\n          onExited={handleExited}\r\n          message={messageInfo ? messageInfo.message : undefined}\r\n          action={\r\n            <React.Fragment>\r\n              <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n                UNDO\r\n              </Button>\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                className={classes.close}\r\n                onClick={handleClose}\r\n              >\r\n                <CloseIcon />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import keyMirror from \"keymirror\";\r\n\r\nconst SocketEvents = keyMirror({\r\n  AUTHENTICATE: null, // Client sends authentication request\r\n  USER_DATA: null, // Fires when user data is sent from server to client\r\n\r\n  AUTHENTICATION_FAILED: null,\r\n  LAST_CHAT_MESSAGES: null, // Gets last chat messages - TODO: Update to CHAT_STATUS\r\n  SEND_CHAT_MESSAGE: null,\r\n  ERROR: null,\r\n  SUCCESS: null,\r\n  HANDSHAKE_SOCKET_ID: null,\r\n  CREATE_SCRAPING_THREAD: null,\r\n  SCRAPING_THREAD_CREATED: null,\r\n  TABLE_SYNC: null,\r\n  ADD_USER: null,\r\n  TABLE_DATA: null,\r\n  SCRAPING_THREAD_SYNC: null,\r\n});\r\n\r\nexport default SocketEvents;\r\n","export default class User {\r\n  /**\r\n   * @type {Number}\r\n   */\r\n  userId;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  username;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  email;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  name;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  UUID;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  authentication_token;\r\n  z;\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  isAdmin;\r\n\r\n  static isValid(userData) {\r\n    return [\r\n      typeof userData === \"object\",\r\n      !!userData.id,\r\n      !!userData.username,\r\n    ].every((c) => c === true);\r\n  }\r\n  constructor(obj) {\r\n    if (typeof obj === \"object\") {\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          this[key] = obj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { EventEmitter } from \"events\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport User from \"../models/User\";\r\n\r\nconst Errors = require(\"../constants/Errors\");\r\n\r\nclass SessionStore extends EventEmitter {\r\n  constructor(params) {\r\n    super(params);\r\n    this.dispatchToken = undefined;\r\n\r\n    this.connectionInitiatedTimestamp = undefined; // When\r\n    this._isAuthenticated = false;\r\n    this.user = {\r\n      authentication_token: localStorage.authentication_token,\r\n      email: undefined,\r\n      username: undefined,\r\n    };\r\n    this.authentication_token_sent_timestamp = false;\r\n    this.sessionId = undefined;\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  getUser() {\r\n    return this.user;\r\n  }\r\n\r\n  needsToAuthenticate() {\r\n    return (\r\n      !this.isAuthenticated() &&\r\n      !this.isAuthenticating &&\r\n      this.getAuthenticationToken()\r\n    );\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {User} user\r\n   */\r\n  setUser(user) {\r\n    this.user = user;\r\n    if (user && user.authentication_token) {\r\n      this.setAuthenticationToken(user.authentication_token);\r\n      this._isAuthenticated = true;\r\n    } else {\r\n      this._isAuthenticated = false;\r\n    }\r\n  }\r\n\r\n  getAuthenticationToken() {\r\n    let _ret = localStorage.getItem(\"authentication_token\");\r\n    if (_ret === undefined || _ret === null || _ret.length < 64) {\r\n      _ret = undefined;\r\n    }\r\n    return _ret;\r\n  }\r\n  setAuthenticationToken(authentication_token) {\r\n    authentication_token = authentication_token || \"\";\r\n    localStorage.setItem(\"authentication_token\", authentication_token);\r\n  }\r\n  setSessionId(sessionId) {\r\n    this.sessionId = sessionId;\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.user instanceof User;\r\n  }\r\n\r\n  updateAvatar(avatar) {\r\n    this.user.avatar = avatar;\r\n  }\r\n  setIsAuthenticating(isIt) {\r\n    this._hasTriedAuthentication = true;\r\n    this._isAuthenticating = isIt;\r\n  }\r\n  hasTriedAuthentication() {\r\n    return !!this._hasTriedAuthentication;\r\n  }\r\n  isAuthenticating() {\r\n    return this._isAuthenticating;\r\n  }\r\n\r\n  logout() {\r\n    this.setAuthenticationToken(\"\");\r\n  }\r\n}\r\n\r\nconst sessionStore = new SessionStore();\r\n\r\nsessionStore.dispatchToken = dispatcher.register((event) => {\r\n  switch (event.actionType) {\r\n    case ActionTypes.Session.USER_DATA_UPDATED:\r\n      sessionStore.setUser(event.data.user);\r\n      break;\r\n\r\n    case ActionTypes.Session.AUTHENTICATION_FAILED:\r\n      sessionStore.setAuthenticationToken(null);\r\n      break;\r\n    case ActionTypes.Session.USER_LOGOUT:\r\n      sessionStore.logout();\r\n      break;\r\n    case ActionTypes.Session.IS_AUTHENTICATING:\r\n      sessionStore.setIsAuthenticating(event.data.isAuthenticating);\r\n      break;\r\n    // case ActionTypes.Session.:\r\n    //   let errorMessage = undefined;\r\n    //   let errorHasToBeFormatted = Array.isArray(event.data);\r\n\r\n    //   if (errorHasToBeFormatted) {\r\n    //     let params = [];\r\n    //     for (let i = 1; i < event.data.length; i++) {\r\n    //       params.push(event.data[i]);\r\n    //     }\r\n    //     errorMessage = Errors[event.data[0]].toString().format(params);\r\n    //   } else {\r\n    //     errorMessage = Errors[event.data];\r\n    //   }\r\n\r\n    //   setTimeout(() => {\r\n    //     dispatcher.dispatch({\r\n    //       actionType: ActionTypes.UI_SHOW_SNACKBAR,\r\n    //       data: {\r\n    //         message: errorMessage,\r\n    //         severity: \"error\",\r\n    //       },\r\n    //     });\r\n    //   });\r\n    //   break;\r\n\r\n    // case ActionTypes.API_SUCCESS:\r\n    //   // Snackbar component will subscribe to this\r\n\r\n    //   setTimeout(() => {\r\n    //     dispatcher.dispatch({\r\n    //       actionType: ActionTypes.UI_SHOW_SNACKBAR,\r\n    //       data: {\r\n    //         message: Errors[event.data] || event.data,\r\n    //         severity: \"success\",\r\n    //       },\r\n    //     });\r\n    //   });\r\n    //   break;\r\n    default:\r\n      break; // do nothing\r\n  }\r\n  sessionStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default sessionStore;\r\n","export default {\r\n  ENDPOINT: \"https://apilinksforcash.teocns.com/\",\r\n  ENDPOINT_SOCKET: \"wss://apilinksforcash.teocns.com:443\",\r\n  BASE_URL: \"https://apilinksforcash.teocns.com\",\r\n  CDN_BASE_URL: \"https://cdn.fyrebet.com\",\r\n  DEBUG: true,\r\n};\r\n","import dispatcher from \"../dispatcher\";\r\n\r\nimport sessionActions from \"../actions/Session\";\r\n\r\nimport SocketEvents from \"../constants/SocketEvents\";\r\n\r\nconst bindSessionSocketHandler = (socket) => {\r\n  socket.on(SocketEvents.AUTHENTICATION_FAILED, () => {\r\n    // Do nothing for now\r\n  });\r\n\r\n  socket.on(SocketEvents.INITIAL_STATUS, (status) => {\r\n    sessionActions.onInitialStatusReceived(status);\r\n  });\r\n\r\n  socket.on(SocketEvents.USER_DATA, ({ user }) => {\r\n    sessionActions.onUserDataReceived(user);\r\n  });\r\n\r\n  socket.on(SocketEvents.ERROR, (errorCode) => {\r\n    sessionActions.onApiError(errorCode);\r\n  });\r\n\r\n  socket.on(SocketEvents.SUCCESS, (successMessage) => {\r\n    sessionActions.onApiSuccess(successMessage);\r\n  });\r\n\r\n  socket.on(SocketEvents.AUTHENTICATION_FAILED, (successMessage) => {\r\n    sessionActions.onAuthenticationFailed();\r\n  });\r\n};\r\n\r\nexport default bindSessionSocketHandler;\r\n","import { EventEmitter } from \"events\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport ScrapingThread from \"../models/ScrapingThread\";\r\nimport TableData from \"../models/TableData\";\r\nconst Errors = require(\"../constants/Errors\");\r\n\r\nclass ScrapingThreadsStore extends EventEmitter {\r\n  /**\r\n   * @type {ScrapingThread[]} threads\r\n   */\r\n  #threads;\r\n  /**\r\n   * Generally set to true whenever the client is waiting for thread creation feedback from the server\r\n   * @type {boolean}\r\n   */\r\n  #add_track_url_is_busy;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  #is_waiting_for_results;\r\n\r\n  /**\r\n   * @type {Object.<string,TableData>}\r\n   */\r\n  #tables;\r\n  constructor(params) {\r\n    super(params);\r\n    this.#tables = {};\r\n\r\n    this.#add_track_url_is_busy = true;\r\n  }\r\n\r\n  canAddUrl() {\r\n    return this.#add_track_url_is_busy;\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  /**\r\n   * @param {ScrapingThread[]} threads\r\n   */\r\n  storeThreads(threads) {\r\n    this.#threads = threads;\r\n  }\r\n\r\n  threadUpdated(threadId, threadData) {}\r\n\r\n  storeSingleThread(thread) {\r\n    this.#threads[thread.threadId] = thread;\r\n  }\r\n\r\n  getThreads() {\r\n    return this.#threads;\r\n  }\r\n\r\n  hasTableData(tableName) {\r\n    return Object.keys(this.#tables).includes(tableName);\r\n  }\r\n\r\n  /**\r\n   * @returns {TableData}\r\n   * @param {string} tableName\r\n   */\r\n  getTableData(tableName) {\r\n    if (!Object.keys(this.#tables).includes(tableName)) {\r\n      // Prepare table data object\r\n      return undefined;\r\n    }\r\n    return this.#tables[tableName];\r\n  }\r\n\r\n  setLoadingResults(isWaiting) {\r\n    this.#is_waiting_for_results = isWaiting;\r\n  }\r\n\r\n  isLoadingTableData(tableName) {\r\n    const td = this.getTableData(tableName);\r\n    if (td instanceof TableData && td.isLoading) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TableData} tableData\r\n   */\r\n  setTableLoading(tableData) {\r\n    if (!this.hasTableData(tableData)) {\r\n      this.#tables[tableData.tableName] = tableData;\r\n    } else {\r\n      this.#tables[tableData.tableName].isLoading = true;\r\n    }\r\n  }\r\n  /**\r\n   *\r\n   * @param {TableData} tableData\r\n   */\r\n  setTableData(tableData) {\r\n    console.log(tableData.rows);\r\n    if (this.hasTableData(tableData.tableName)) {\r\n      this.#tables[tableData.tableName].rows = tableData.rows;\r\n      this.#tables[tableData.tableName].totalRowsCount =\r\n        tableData.totalRowsCount;\r\n      this.#tables[tableData.tableName].isLoading = false;\r\n    }\r\n  }\r\n}\r\n\r\nconst scrapingThreadsStore = new ScrapingThreadsStore();\r\n\r\nscrapingThreadsStore.dispatchToken = dispatcher.register((event) => {\r\n  let willEmitChange = true;\r\n  switch (event.actionType) {\r\n    case ActionTypes.ScrapingThread.THREAD_CREATED:\r\n      break;\r\n\r\n    default:\r\n      // Do nothing.\r\n      willEmitChange = false;\r\n      break;\r\n  }\r\n  willEmitChange &&\r\n    scrapingThreadsStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default scrapingThreadsStore;\r\n","/**\n *\n * @param {string} str\n */\nconst url = (str) => {\n  if (!str || typeof str !== \"string\") {\n    return false;\n  }\n  const regex = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n  return !!str.match(regex);\n};\n\nexport default { url };\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nconst showSnackbar = (message, severity) => {\r\n  severity = typeof severity !== \"string\" ? \"\" : severity;\r\n  message = typeof message !== \"string\" ? \"\" : message;\r\n  severity = !severity && !message ? \"error\" : severity;\r\n  message = !message\r\n    ? \"An error occured, please verify your connection and try again.\"\r\n    : message;\r\n\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.UI.SHOW_SNACKBAR,\r\n    data: {\r\n      message: message,\r\n      severity: severity,\r\n    },\r\n  });\r\n};\r\nexport default { showSnackbar };\r\n","import errors from \"../constants/Errors\";\r\n/**\r\n * @typedef {string} ErrorCode\r\n */\r\n\r\nclass ApiError {\r\n  errorCode;\r\n  variables;\r\n\r\n  /**\r\n   *\r\n   * @param {ErrorCode} errorCode Error code found in constants/Error\r\n   * @param {Array} data Array containing error variables\r\n   */\r\n  constructor(errorCode, variables) {\r\n    if (typeof errorCode === \"object\") {\r\n      errorCode = errorCode.errorCode;\r\n      variables = errorCode.variables;\r\n    }\r\n    this.errorCode = errorCode;\r\n    this.variables = variables;\r\n  }\r\n\r\n  toString() {\r\n    return errors[this.errorCode];\r\n  }\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  static isErrorCode(errorCode) {\r\n    return errorCode in errors;\r\n  }\r\n\r\n  /**\r\n   * @returns {boolean}\r\n   */\r\n  static isError(val) {\r\n    return !!(val instanceof ApiError) || val.errorCode;\r\n  }\r\n}\r\n\r\nexport default ApiError;\r\n","import { EventEmitter } from \"events\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport User from \"../models/User\";\r\nimport TableData from \"../models/TableData\";\r\n\r\nconst Errors = require(\"../constants/Errors\");\r\n\r\nclass TableStore extends EventEmitter {\r\n  /**\r\n   * @type {Object.<string,TableData[]>}\r\n   */\r\n  #tables;\r\n\r\n  /**\r\n   * @type {Object.<string,string>}\r\n   */\r\n  #tables_name_hash_keypairs;\r\n\r\n  constructor(params) {\r\n    super(params);\r\n    this.dispatchToken = undefined;\r\n\r\n    this.#tables = {};\r\n    this.#tables_name_hash_keypairs = {};\r\n  }\r\n  addChangeListener(event, callback) {\r\n    this.on(event, callback);\r\n  }\r\n\r\n  removeChangeListener(event, callback) {\r\n    this.removeListener(event, callback);\r\n  }\r\n\r\n  emitChange(event, data) {\r\n    this.emit(event, data);\r\n  }\r\n\r\n  /**\r\n   * @returns {TableData}\r\n   * @param {string} tableName\r\n   */\r\n  getTableData(tableName) {\r\n    if (!Object.keys(this.#tables).includes(tableName)) {\r\n      // Prepare table data object\r\n      return undefined;\r\n    }\r\n    return this.#tables[tableName];\r\n  }\r\n\r\n  isLoadingTableData(tableName) {\r\n    const td = this.getTableData(tableName);\r\n    if (td instanceof TableData && td.isLoading) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TableData} tableData\r\n   */\r\n  setTableLoading(tableData) {\r\n    if (!this.hasTableData(tableData)) {\r\n      this.#tables[tableData.tableName] = tableData;\r\n    } else {\r\n      this.#tables[tableData.tableName].isLoading = true;\r\n    }\r\n  }\r\n  /**\r\n   * @param {TableData} tableData\r\n   */\r\n  storeTableData(tableData) {\r\n    const previousTableData = this.getByTableName(tableData.tableName);\r\n    if (previousTableData) {\r\n      tableData.previousTableData = { ...previousTableData };\r\n      this.deleteTableData(previousTableData.hash);\r\n    }\r\n\r\n    this.#tables_name_hash_keypairs[tableData.tableName] = tableData.hash;\r\n    this.#tables[tableData.hash] = tableData;\r\n  }\r\n\r\n  deleteTableData(hash) {\r\n    delete this.#tables[hash];\r\n  }\r\n  /**\r\n   * @param {TableData} tableData\r\n   */\r\n  updateTableData(tableData) {\r\n    this.#tables[tableData.hash] = tableData;\r\n    console.log(\"newTabelData\", this.#tables);\r\n  }\r\n\r\n  getByHash(tableHash) {\r\n    return this.#tables[tableHash];\r\n  }\r\n\r\n  /**\r\n   * @returns {TableData}\r\n   * @param {string} tableName\r\n   */\r\n  getByTableName(tableName) {\r\n    const foundHash = this.#tables_name_hash_keypairs[tableName];\r\n    if (foundHash) {\r\n      return this.getByHash(foundHash);\r\n    }\r\n  }\r\n\r\n  addRow({ row, tableName }) {\r\n    const tableData = this.getByTableName(tableName);\r\n    if (!tableData) {\r\n      // Wtf\r\n      return;\r\n    }\r\n    tableData.rows = [row, ...tableData.rows];\r\n    tableData.totalRowsCount++;\r\n    // That's it\r\n  }\r\n\r\n  alterRow({ row, key, tableName }) {\r\n    const tableData = this.getByTableName(tableName);\r\n    if (!tableData) {\r\n      // Wtf\r\n      return;\r\n    }\r\n    const replaceable = tableData.rows.findIndex((c) => c[key] === row[key]);\r\n    if (replaceable !== -1) {\r\n      tableData.rows[replaceable] = row;\r\n    }\r\n  }\r\n}\r\n\r\nconst tableStore = new TableStore();\r\n\r\ntableStore.dispatchToken = dispatcher.register((event) => {\r\n  switch (event.actionType) {\r\n    case ActionTypes.Table.DATA_CREATED:\r\n      tableStore.storeTableData(event.data.tableData);\r\n      break;\r\n    case ActionTypes.Table.DATA_UPDATED:\r\n      tableStore.updateTableData(event.data.tableData);\r\n      break;\r\n    case ActionTypes.Table.DATA_MODIFIED:\r\n      //const { row, key, tableName } = event;\r\n      tableStore.alterRow(event.data);\r\n      break;\r\n    case ActionTypes.Table.ROW_ADDED:\r\n      tableStore.addRow(event.data);\r\n      break;\r\n    default:\r\n      break; // do nothing\r\n  }\r\n  tableStore.emitChange(event.actionType, event.data);\r\n});\r\n\r\nexport default tableStore;\r\n","import ActionTypes from \"../constants/ActionTypes\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport TableData from \"../models/TableData\";\r\nimport sessionStore from \"../store/session\";\r\nimport tableStore from \"../store/Tables\";\r\n\r\n/**\r\n * @returns {TableData}\r\n * @param {TableData} param0\r\n */\r\nconst createTableData = ({\r\n  tableName,\r\n  filter,\r\n  page,\r\n  rowsPerPage,\r\n  previousRowCount,\r\n  countryFilter,\r\n  dateRange,\r\n}) => {\r\n  const createdTableData = new TableData({\r\n    tableName,\r\n    filter,\r\n    rowsPerPage,\r\n    page,\r\n    isLoading: true,\r\n    totalRowsCount: previousRowCount !== undefined ? previousRowCount : -1,\r\n    rows: [],\r\n    dateRange,\r\n    countryFilter,\r\n  });\r\n\r\n  console.log(\"createdTableData\", createdTableData);\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Table.DATA_CREATED,\r\n    data: {\r\n      tableData: createdTableData,\r\n    },\r\n  });\r\n};\r\n\r\n/**\r\n *\r\n * @param {TableData} tableData\r\n */\r\nconst onTableDataReceived = (tableData) => {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Table.DATA_UPDATED,\r\n    data: { tableData },\r\n  });\r\n};\r\n\r\nconst onRowAdded = ({ row, tableName }) => {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Table.ROW_ADDED,\r\n    data: { row, tableName },\r\n  });\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { createTableData, onTableDataReceived, onRowAdded };\r\n","import keymirror from \"keymirror\";\r\n\r\nexport default keymirror({\r\n  ADD_TRACK_URL: null,\r\n  USERS_ADMIN: null,\r\n});\r\n","/* eslint-disable import/no-anonymous-default-export */\nimport scrapingThreadStore from \"../store/ScrapingThreads\";\nimport sessionStore from \"../store/session\";\nimport { sendMessage } from \"../socket\";\nimport SocketEvents from \"../constants/SocketEvents\";\n\nimport validate from \"../helpers/validate\";\nimport uiActions from \"../actions/UI\";\nimport Errors from \"../constants/Errors\";\nimport ApiError from \"../models/ApiError\";\nimport ScrapingThread from \"../models/ScrapingThread\";\nimport dispatcher from \"../dispatcher\";\nimport ActionTypes from \"../constants/ActionTypes\";\nimport { Socket } from \"socket.io-client\";\nimport TableData from \"../models/TableData\";\nimport tableActions from \"../actions/Table\";\n\nimport TableConstants from \"../constants/Tables\";\nconst create = (url) => {\n  // Make sure it's authenticated, just in case\n  if (!sessionStore.isAuthenticated()) {\n    uiActions.showSnackbar(\n      new ApiError(Errors.ERR_UNAUTHENTICATED).toString(),\n      \"error\"\n    );\n    return false;\n  }\n\n  if (typeof url !== \"string\") {\n    uiActions.showSnackbar(Errors.ERR_INVALID_URL, \"error\");\n    return false;\n  }\n  url = url.trim();\n  if (!validate.url(url)) {\n    uiActions.showSnackbar(Errors.ERR_INVALID_URL, \"error\");\n    return false;\n  }\n  sendMessage(SocketEvents.CREATE_SCRAPING_THREAD, url);\n\n  // Send a socket message requesting a thread creation\n};\n\n/**\n *\n * @param {ScrapingThread} scrapingThread\n */\nconst onThreadCreated = (scrapingThread) => {\n  uiActions.showSnackbar(\"URL successfuly registered for tracking\", \"success\");\n  dispatcher.dispatch({\n    actionType: ActionTypes.ScrapingThread.THREAD_CREATED,\n    data: { scrapingThread },\n  });\n};\n\nconst onThreadModified = (scrapingThread) => {\n  //uiActions.showSnackbar(\"URL successfuly registered for tracking\", \"success\");\n  dispatcher.dispatch({\n    actionType: ActionTypes.Table.DATA_MODIFIED,\n    data: {\n      key: \"threadId\",\n      tableName: TableConstants.ADD_TRACK_URL,\n      row: scrapingThread,\n    },\n  });\n};\n\n/**\n *\n * @param {TableData} tableData\n */\nconst requestTableDataRows = (tableData) => {\n  dispatcher.dispatch({\n    actionType: ActionTypes.ScrapingThread.TABLE_DATA_REQUESTED,\n    data: { tableData },\n  });\n\n  // Create an unreferenced object\n  const packet = { ...tableData };\n  delete packet.rows;\n  delete packet.isLoading;\n  sendMessage(SocketEvents.SCRAPING_THREADS_TABLE_REQUEST, packet);\n};\n\nexport default {\n  create,\n  onThreadCreated,\n  requestTableDataRows,\n  onThreadModified,\n};\n","import dispatcher from \"../dispatcher\";\r\n\r\nimport sessionActions from \"../actions/Session\";\r\nimport scrapingThreadActions from \"../actions/ScrapingThread\";\r\n\r\nimport SocketEvents from \"../constants/SocketEvents\";\r\nimport sessionStore from \"../store/session\";\r\nimport tableStore from \"../store/Tables\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport TableNames from \"../constants/Tables\";\r\nimport { sendMessage } from \"../socket\";\r\nconst bindSessionSocketHandler = (socket) => {\r\n  socket.on(SocketEvents.SCRAPING_THREAD_CREATED, (scrapingThread) => {\r\n    scrapingThreadActions.onThreadCreated(scrapingThread);\r\n  });\r\n\r\n  socket.on(SocketEvents.SCRAPING_THREAD_SYNC, (scrapingThread) => {\r\n    scrapingThreadActions.onThreadModified(scrapingThread);\r\n  });\r\n\r\n  // socket.on(SocketEvents.SCRAPING_THREADS_TABLE_DATA, (tableData) => {\r\n  //   console.log(\"SocketEvents.SCRAPING_THREADS_TABLE_DATA\");\r\n  //   scrapingThreadActions.onTableDataReceived(tableData);\r\n  // });\r\n\r\n  /**\r\n   *\r\n   * @param {object} param0\r\n   * @param {TableData} param0.tableData\r\n   */\r\n  // const onTableHashCreated = ({ tableData }) => {\r\n  //   if (tableData.tableName === TableNames.ADD_TRACK_URL) {\r\n  //     // Request table data for this\r\n  //     delete tableData.rows;\r\n  //     delete tableData.isLoading;\r\n  //     sendMessage(SocketEvents.SCRAPING_THREADS_TABLE_REQUEST, tableData);\r\n  //   }\r\n  //   console.log(\"onTableHashCreated\", tableData);\r\n  // };\r\n\r\n  // tableStore.addChangeListener(\r\n  //   ActionTypes.Table.DATA_CREATED,\r\n  //   onTableHashCreated\r\n  // );\r\n};\r\n\r\nexport default bindSessionSocketHandler;\r\n","import dispatcher from \"../dispatcher\";\r\n\r\nimport sessionActions from \"../actions/Session\";\r\nimport scrapingThreadActions from \"../actions/ScrapingThread\";\r\n\r\nimport SocketEvents from \"../constants/SocketEvents\";\r\nimport sessionStore from \"../store/session\";\r\nimport tableStore from \"../store/Tables\";\r\nimport tableActions from \"../actions/Table\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport TableNames from \"../constants/Tables\";\r\nimport { sendMessage } from \"../socket\";\r\nconst bindSocketHandler = (socket) => {\r\n  //   socket.on(SocketEvents.SCRAPING_THREAD_CREATED, (scrapingThread) => {\r\n  //     scrapingThreadActions.onThreadCreated(scrapingThread);\r\n  //   });\r\n\r\n  socket.on(SocketEvents.TABLE_DATA, (tableData) => {\r\n    tableActions.onTableDataReceived(tableData);\r\n  });\r\n\r\n  /**\r\n   *\r\n   * @param {object} param0\r\n   * @param {TableData} param0.tableData\r\n   */\r\n  const onTableHashCreated = ({ tableData }) => {\r\n    const dup = { ...tableData };\r\n    delete dup.rows;\r\n    delete dup.isLoading;\r\n    sendMessage(SocketEvents.TABLE_SYNC, dup);\r\n  };\r\n\r\n  tableStore.addChangeListener(\r\n    ActionTypes.Table.DATA_CREATED,\r\n    onTableHashCreated\r\n  );\r\n};\r\n\r\nexport default bindSocketHandler;\r\n","import dispatcher from \"./dispatcher\";\r\nimport ActionTypes from \"./constants/ActionTypes\";\r\nimport EnvironmentConstants from \"./constants/Environment\";\r\n\r\nimport io from \"socket.io-client\";\r\nimport bindSessionSocketHandler from \"./socket-handlers/session\";\r\nimport bindScrapingThreadSocketHandler from \"./socket-handlers/ScrapingThread\";\r\nimport bindTableSocketHandler from \"./socket-handlers/Table\";\r\n\r\nvar socketInstance = initialize();\r\n\r\nexport function initialize() {\r\n  // Should be called once, maybe\r\n  const socket = io.connect(EnvironmentConstants.ENDPOINT_SOCKET, {\r\n    reconnect: true,\r\n    secure: true,\r\n    rejectUnauthorized: false,\r\n    transports: [\"websocket\"],\r\n  });\r\n\r\n  bindSessionSocketHandler(socket);\r\n  bindScrapingThreadSocketHandler(socket);\r\n  bindTableSocketHandler(socket);\r\n\r\n  //bindEventHandlers(socket);\r\n\r\n  return socket;\r\n}\r\nexport function sendMessage(event, data) {\r\n  socketInstance.emit(event, data);\r\n}\r\n\r\nexport default socketInstance;\r\n","import constants from \"../constants/Environment\";\r\nimport sessionStore from \"../store/session\";\r\nimport sessionActions from \"../actions/Session\";\r\nimport Errors from \"../constants/Errors\";\r\nimport ApiError from \"../models/ApiError\";\r\nString.prototype.trimChar = function (charToRemove) {\r\n  let string = this;\r\n  while (string.charAt(0) == charToRemove) {\r\n    string = string.substring(1);\r\n  }\r\n\r\n  while (string.charAt(string.length - 1) == charToRemove) {\r\n    string = string.substring(0, string.length - 1);\r\n  }\r\n\r\n  return string;\r\n};\r\n\r\n// The class will automatically handle errors (notifies genericAppErrorHanelr)\r\nexport default class MakeRequest {\r\n  static _req(method, endpoint, data) {\r\n    endpoint = `${constants.ENDPOINT.trimChar(\"/\")}/${endpoint.trimChar(\"/\")}`;\r\n\r\n    const headers = { \"Content-Type\": \"application/json\" };\r\n    // If authentication token, append it\r\n    const authentication_token = sessionStore.getAuthenticationToken();\r\n\r\n    if (authentication_token) {\r\n      headers[\"X-Authentication-Token\"] = authentication_token;\r\n    }\r\n    return new Promise((resolve) => {\r\n      let requestOptions = {\r\n        method: method,\r\n        headers,\r\n        body: JSON.stringify(data),\r\n      };\r\n      fetch(endpoint, requestOptions)\r\n        .then((response) => {\r\n          response.json().then((json) => {\r\n            try {\r\n              if (ApiError.isError(json)) {\r\n                sessionActions.onApiError(new ApiError(json));\r\n                return resolve(json);\r\n              }\r\n              resolve(json);\r\n            } catch (error) {\r\n              sessionActions.onApiError(new ApiError(Errors.ERR_UNKNOWN));\r\n              resolve(error);\r\n            }\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n          resolve(false);\r\n        });\r\n    });\r\n  }\r\n  static post(endpoint, data) {\r\n    // Adjust endpoint\r\n\r\n    return this._req(\"POST\", endpoint, data);\r\n  }\r\n  static get(endpoint) {\r\n    return this._req(\"GET\", endpoint);\r\n  }\r\n}\r\n","import MakeRequest from \"./_Api\";\r\nimport UrlTrackingThread from \"../models/ScrapingThread\";\r\nimport User from \"../models/User\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nexport default class UrlTracking {\r\n  /**\r\n   * @returns {User}\r\n   * @param {string} email\r\n   * @param {string} password\r\n   */\r\n  static async Authenticate(email, password) {\r\n    return await MakeRequest.post(\"/authenticate\", { email, password });\r\n  }\r\n\r\n  static async AddUser(userData) {\r\n    return await MakeRequest.post(\"/add-user\", userData);\r\n  }\r\n  /**\r\n   *\r\n   * @param {number[]} userIds\r\n   */\r\n  static async DeleteUsers(userIds) {\r\n    return await MakeRequest.post(\"/delete-users\", userIds);\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport dispatcher from \"../dispatcher\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nimport SocketEvents from \"../constants/SocketEvents\";\r\n\r\nimport sessionStore from \"../store/session\";\r\n\r\nimport { sendMessage } from \"../socket\";\r\n\r\nimport User from \"../models/User\";\r\n\r\nimport ClientData from \"../models/ClientData.js\";\r\nimport UserApi from \"../api/User\";\r\nimport { SettingsRemote } from \"@material-ui/icons\";\r\nimport ApiError from \"../models/ApiError\";\r\n\r\nfunction logout() {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.USER_LOGOUT,\r\n  });\r\n  window.location.reload();\r\n}\r\n\r\nconst setIsAuthenticating = (isIt) => {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.IS_AUTHENTICATING,\r\n    data: { isAuthenticating: isIt },\r\n  });\r\n};\r\n\r\nasync function userAuthenticate({ email, password }) {\r\n  setIsAuthenticating(true);\r\n  try {\r\n    const { user } = await UserApi.Authenticate(email, password);\r\n    if (user) {\r\n      sessionStore.setAuthenticationToken(user.authentication_token);\r\n      setTimeout(() => {\r\n        tryAuthentication();\r\n      });\r\n    } else {\r\n      onAuthenticationFailed();\r\n    }\r\n  } catch (e) {\r\n    console.log(e);\r\n    onAuthenticationFailed();\r\n  } finally {\r\n    setIsAuthenticating(false);\r\n  }\r\n}\r\n\r\nfunction onAuthenticationFailed() {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.AUTHENTICATION_FAILED,\r\n  });\r\n  setIsAuthenticating(false);\r\n}\r\n\r\nfunction onUserDataReceived(userData) {\r\n  if (!User.isValid(userData)) {\r\n    return;\r\n  }\r\n  const user = new User(userData);\r\n  // Dispatch user data received and balance changes\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.USER_DATA_UPDATED,\r\n    data: { user },\r\n  });\r\n}\r\n/**\r\n *\r\n * @param {ApiError} apiError\r\n */\r\nfunction onApiError(apiError) {\r\n  let err = \"\";\r\n  if (typeof apiError === \"object\") {\r\n    err = new ApiError(apiError).toString();\r\n  } else {\r\n    err = apiError;\r\n  }\r\n\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.UI.SHOW_SNACKBAR,\r\n    data: { message: err, severity: \"error\" },\r\n  });\r\n}\r\n\r\nfunction onApiSuccess(successMessage) {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.API_ERROR,\r\n    data: successMessage,\r\n  });\r\n}\r\nfunction tryAuthentication() {\r\n  const storedAuthenticationToken = sessionStore.getAuthenticationToken();\r\n  const isAuthenticating = sessionStore.isAuthenticating();\r\n  if (!storedAuthenticationToken || isAuthenticating) {\r\n    return;\r\n  }\r\n  setIsAuthenticating(true);\r\n  sendMessage(SocketEvents.AUTHENTICATE, storedAuthenticationToken);\r\n}\r\n\r\nconst onSessionIdReceived = (sessionId) => {\r\n  dispatcher.dispatch({\r\n    actionType: ActionTypes.Session.ID_RECEIVED,\r\n    data: { sessionId },\r\n  });\r\n};\r\n\r\nexport default {\r\n  userAuthenticate,\r\n  onApiError,\r\n  onApiSuccess,\r\n  onSessionIdReceived,\r\n  tryAuthentication,\r\n  onUserDataReceived,\r\n  onAuthenticationFailed,\r\n  logout,\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const prettyTimelapse = (date) => {\r\n  if (!moment.isMoment(date)) {\r\n    date = moment.unix(date); // ok for js date, milliseconds or string in ISO format\r\n  }\r\n  if (date.isSame(moment(), \"day\")) {\r\n    return date.format(\"hh:mm a\");\r\n  } else if (date.isSame(moment().subtract(1, \"d\"), \"day\")) {\r\n    return \"Yesterday\";\r\n  } else if (date.isSame(moment(), \"week\")) {\r\n    return date.format(\"dddd\");\r\n  } else {\r\n    return date.format(\"DD/MM/YYYY\");\r\n  }\r\n};\r\n\r\n/**\r\n * @typedef {Object} TimeRemaining\r\n * @property {number} total\r\n * @property {number} days\r\n * @property {number} hours\r\n * @property {number} minutes\r\n * @property {number} seconds\r\n */\r\n\r\n/**\r\n * @param {number} endtime\r\n * @returns {TimeRemaining}\r\n */\r\nexport function getTimeRemaining(endtime) {\r\n  const total = endtime - parseInt(Date.now() / 1000);\r\n  const seconds = Math.floor(total % 60);\r\n  const minutes = Math.floor((total / 60) % 60);\r\n  const hours = Math.floor((total / (60 * 60)) % 24);\r\n  const days = Math.floor(total / (60 * 60 * 24));\r\n\r\n  return {\r\n    total,\r\n    days,\r\n    hours,\r\n    minutes,\r\n    seconds,\r\n  };\r\n}\r\n\r\nexport function timeSince(date) {\r\n  return moment((date - 10) * 1000).fromNow();\r\n}\r\n","export const Statuses = {\n  QUEUED: 0,\n  SEARCHING_PAGE: 1,\n  SCRAPING_JOBS: 2,\n  COMPLETED: 3,\n  BAD_LINK: 4,\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default TablePaginationActions;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { prettyTimelapse, timeSince } from \"../../helpers/time\";\r\nimport { Statuses } from \"../../constants/ScrapingThread\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Box,\r\n  CircularProgress,\r\n  LinearProgress,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  Tooltip,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { motion } from \"framer-motion\";\r\n\r\nimport sessionStore from \"../../store/session\";\r\nimport tableStore from \"../../store/Tables\";\r\nimport scrapingThreadsStore from \"../../store/ScrapingThreads\";\r\nimport TablePaginationActions from \"./Pagination\";\r\nimport EmptyTablePlaceholder from \"./EmptyPlaceholder\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport ActionTypes from \"../../constants/ActionTypes\";\r\nimport scrapingThreadsActions from \"../../actions/ScrapingThread\";\r\nimport {\r\n  BrandingWatermark,\r\n  Cancel,\r\n  HourglassFull,\r\n  Today,\r\n  HourglassEmpty,\r\n  DoneAll,\r\n  BrandingWatermarkOutlined,\r\n  Check,\r\n  ErrorOutline,\r\n  BugReport,\r\n} from \"@material-ui/icons\";\r\n\r\nimport tableActions from \"../../actions/Table\";\r\nimport TableNames from \"../../constants/Tables\";\r\nimport TableData from \"../../models/TableData\";\r\nimport ImportExportIcon from \"@material-ui/icons/ImportExport\";\r\nimport AssignmentTurnedInIcon from \"@material-ui/icons/AssignmentTurnedIn\";\r\nimport FindInPageIcon from \"@material-ui/icons/FindInPage\";\r\nimport Search from \"@material-ui/icons/Search\";\r\nimport ScrapingThread from \"../../models/ScrapingThread\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableRow: {\r\n    height: 70,\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  emptyRow: {\r\n    height: 70,\r\n    backgroundColor: \"white!important\",\r\n    \"&:first-child td\": {\r\n      paddingTop: \"8rem\",\r\n      paddingBottom: \"8rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst THIS_TABLE_NAME = TableNames.ADD_TRACK_URL;\r\nvar TRIGGER_ROW_ADDED_ANIMATION = false;\r\nconst AddTrackUrlTable = () => {\r\n  let [tableData, setTableData] = useState(\r\n    tableStore.getTableData(THIS_TABLE_NAME)\r\n  );\r\n\r\n  const HasTableData = tableData !== undefined;\r\n\r\n  if (!HasTableData) {\r\n    tableData = TableData.defaults(THIS_TABLE_NAME);\r\n  }\r\n  const rowsPerPage = tableData.rowsPerPage;\r\n  const page = tableData.page;\r\n  let rows = tableData.rows;\r\n\r\n  const IsLoadingResults = tableData.isLoading;\r\n  let hasInheritedRows = false;\r\n  if (IsLoadingResults && tableData.previousTableData) {\r\n    rows = tableData.previousTableData.rows;\r\n    hasInheritedRows = true;\r\n  }\r\n\r\n  const isLoadingResults = tableData ? tableData.isLoading : true;\r\n  const rowsLength = Array.isArray(rows) ? rows.length : 0;\r\n  const classes = useStyles();\r\n  // const emptyRows =\r\n  //   rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage);\r\n\r\n  const syncTableData = ({ newPage, newRowsPerPage }) => {\r\n    tableActions.createTableData({\r\n      rowsPerPage: newRowsPerPage !== undefined ? newRowsPerPage : rowsPerPage,\r\n      page:\r\n        newRowsPerPage !== -1 ? (newPage !== undefined ? newPage : page) : 0,\r\n      filter: \"\",\r\n      tableName: THIS_TABLE_NAME,\r\n      previousRowCount:\r\n        tableData && tableData.totalRowsCount\r\n          ? tableData.totalRowsCount\r\n          : undefined,\r\n    });\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"handleChangePage.newPage\", newPage);\r\n    syncTableData({ newPage });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    const newRowsPerPage = parseInt(event.target.value, 10);\r\n    syncTableData({ newRowsPerPage, newPage: 0 });\r\n  };\r\n\r\n  /**\r\n   * @type {Object} obj\r\n   * @type {TableData} obj.tableData\r\n   */\r\n  const onTableRowsDataUpdated = ({ tableData }) => {\r\n    if (tableData.tableName === THIS_TABLE_NAME) {\r\n      const foundTable = tableStore.getByTableName(THIS_TABLE_NAME);\r\n      console.log(\"foundTable\", foundTable);\r\n      setTableData(foundTable);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @type {Object} obj\r\n   * @type {TableData} obj.tableData\r\n   */\r\n  const onTableRowsDataModified = ({ tableName }) => {\r\n    console.log(\"data modified on table \", tableName);\r\n    if (tableName === THIS_TABLE_NAME) {\r\n      const foundTable = tableStore.getByTableName(THIS_TABLE_NAME);\r\n      console.log(\"foundTable\", foundTable);\r\n      setTableData({ ...foundTable });\r\n    }\r\n  };\r\n  console.log(\"rendering\", tableData);\r\n\r\n  const onScrapingThreadCreated = () => {\r\n    TRIGGER_ROW_ADDED_ANIMATION = true;\r\n    setTimeout(() => {\r\n      syncTableData({ newPage: 0 });\r\n    });\r\n  };\r\n  const bindListeners = () => {\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_CREATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_UPDATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_MODIFIED,\r\n      onTableRowsDataModified\r\n    );\r\n    scrapingThreadsStore.addChangeListener(\r\n      ActionTypes.ScrapingThread.THREAD_CREATED,\r\n      onScrapingThreadCreated\r\n    );\r\n    return () => {\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_CREATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_UPDATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_MODIFIED,\r\n        onTableRowsDataModified\r\n      );\r\n      scrapingThreadsStore.removeChangeListener(\r\n        ActionTypes.Table.ROW_ADDED,\r\n        onScrapingThreadCreated\r\n      );\r\n    };\r\n  };\r\n  /**\r\n   *\r\n   * @param {ScrapingThread} thread\r\n   */\r\n  const renderThreadStatus = (row) => {\r\n    let icon = undefined;\r\n    let innerText = undefined;\r\n    let caption = undefined;\r\n    switch (row.status) {\r\n      case Statuses.BAD_LINK:\r\n        innerText = \"Bad link\";\r\n        icon = (\r\n          <Tooltip title=\"Could not scrape link\">\r\n            <ErrorOutline\r\n              style={{\r\n                width: 18,\r\n                height: 18,\r\n                color: \"red\",\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        );\r\n        break;\r\n      case Statuses.SEARCHING_PAGE:\r\n        innerText = \"SCANNING URL\";\r\n        icon = (\r\n          <BugReport\r\n            color=\"primary\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n      case Statuses.QUEUED:\r\n        innerText = \"in queue\";\r\n        icon = (\r\n          <Tooltip title=\"Link queued for scraping\">\r\n            <HourglassEmpty\r\n              style={{\r\n                width: 18,\r\n                height: 18,\r\n                color: theme.palette.text.hint,\r\n              }}\r\n            />\r\n          </Tooltip>\r\n        );\r\n        break;\r\n      case Statuses.COMPLETED:\r\n        innerText = `${\r\n          row.scrapedJobs > 0 ? row.scrapedJobs : \"No\"\r\n        } Jobs found`;\r\n        caption = `IN ${row.auditsCount} LINKS`;\r\n        icon =\r\n          row.scrapedJobs > 0 ? (\r\n            <Tooltip title=\"Scraping is completed\">\r\n              <DoneAll\r\n                style={{\r\n                  width: 18,\r\n                  height: 18,\r\n                  color: \"green\",\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          ) : (\r\n            <Tooltip title=\"No jobs found\">\r\n              <ErrorOutline\r\n                style={{\r\n                  width: 18,\r\n                  height: 18,\r\n                  color: \"red\",\r\n                }}\r\n              />\r\n            </Tooltip>\r\n          );\r\n        break;\r\n      case Statuses.SCRAPING_JOBS:\r\n        innerText = `${row.scrapedJobs} Jobs found`;\r\n        caption = `SUB LINK ${row.auditsCount}/${row.externalLinksFound}`;\r\n        icon = (\r\n          <BugReport\r\n            color=\"primary\"\r\n            style={{\r\n              width: 18,\r\n              height: 18,\r\n            }}\r\n          />\r\n        );\r\n        break;\r\n    }\r\n    return (\r\n      <Box\r\n        alignItems=\"center\"\r\n        flexWrap=\"nowrap\"\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\" mr={theme.spacing(1)}>\r\n          <Typography\r\n            variant=\"overline\"\r\n            noWrap={true}\r\n            style={{\r\n              marginLeft: theme.spacing(1),\r\n              whiteSpace: \"nowrap\",\r\n              lineHeight: \"1rem\",\r\n            }}\r\n          >\r\n            {innerText}\r\n          </Typography>\r\n          {caption && (\r\n            <Typography\r\n              variant=\"caption\"\r\n              style={{ color: theme.palette.text.hint }}\r\n            >\r\n              {caption}\r\n            </Typography>\r\n          )}\r\n        </Box>\r\n        {icon}\r\n      </Box>\r\n    );\r\n  };\r\n  const renderEmptyRows = () => {\r\n    if (rowsPerPage === rowsLength) {\r\n      return \"\";\r\n    }\r\n    const isJustFilling = rowsLength > 0;\r\n    const hasFilterApplied =\r\n      tableData.totalRowsCount < tableData.unfilteredRowsCount;\r\n    const _renderHint = () => {\r\n      if (hasFilterApplied) {\r\n        return (\r\n          <Typography\r\n            variant={isJustFilling ? \"body2\" : \"h6\"}\r\n            style={{ color: theme.palette.text.hint }}\r\n          >\r\n            Try changing filter options\r\n          </Typography>\r\n        );\r\n      }\r\n      if (!isJustFilling)\r\n        return (\r\n          <Typography variant=\"h6\" style={{ color: theme.palette.text.hint }}>\r\n            Add some links to get started\r\n          </Typography>\r\n        );\r\n    };\r\n    const _emptyRowContent = () => (\r\n      <TableCell colspan=\"6\">\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexDirection=\"column\"\r\n        >\r\n          {!isJustFilling && (\r\n            <Search\r\n              style={{\r\n                color: theme.palette.text.disabled,\r\n                width: 48,\r\n                height: 48,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant={isJustFilling ? \"h6\" : \"h4\"}\r\n              style={{\r\n                color: isJustFilling\r\n                  ? theme.palette.text.hint\r\n                  : theme.palette.text.primary,\r\n              }}\r\n            >\r\n              No{rowsLength > 0 ? \" more\" : \"\"} links found\r\n            </Typography>\r\n          </Box>\r\n          {_renderHint()}\r\n        </Box>\r\n      </TableCell>\r\n    );\r\n\r\n    const _createRow = () => (\r\n      <TableRow\r\n        className={clsx({\r\n          [classes.tableRow]: true,\r\n          [classes.emptyRow]: true,\r\n        })}\r\n        key={Math.random()}\r\n      >\r\n        {_emptyRowContent()}\r\n      </TableRow>\r\n    );\r\n\r\n    return _createRow();\r\n  };\r\n  useEffect(() => {\r\n    // Means data has not yet loaded nor requested\r\n    if (!HasTableData) {\r\n      setTimeout(() => {\r\n        syncTableData({});\r\n      });\r\n    }\r\n    if (!hasInheritedRows) {\r\n      //TRIGGER_ROW_ADDED_ANIMATION = false;\r\n    }\r\n    return bindListeners();\r\n  });\r\n\r\n  const theme = useTheme();\r\n  return (\r\n    <Table className={classes.table} aria-label=\"custom pagination table\">\r\n      {/* <LinearProgress\r\n        variant=\"indeterminate\"\r\n        color=\"secondary\"\r\n        style={{ height: 2, opacity: IsLoadingResults ? \"0.5\" : 0 }}\r\n      /> */}\r\n      <TableBody>\r\n        {isLoadingResults && !hasInheritedRows\r\n          ? [...Array(rowsPerPage !== undefined ? rowsPerPage : 10).keys()].map(\r\n              (x) => (\r\n                <TableRow key={x} style={{ height: 56 }}>\r\n                  {/* {[...Array(3).keys()].map((c) => (\r\n                  <TableCell key={c} colSpan={6 / c}>\r\n                    <Skeleton animation=\"wave\" style={{ height: 48 }} />\r\n                  </TableCell>\r\n                ))} */}\r\n                  <TableCell width=\"45%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\" align=\"right\">\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      style={{\r\n                        width: \"75%\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )\r\n          : rows.map((row, index) => {\r\n              const innerRow = (\r\n                <React.Fragment>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Link href={row.url} target=\"_blank\">\r\n                      {row.url}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 160 }} align=\"left\">\r\n                    <Box\r\n                      display=\"inline-flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"start\"\r\n                    >\r\n                      <Today\r\n                        style={{\r\n                          width: 18,\r\n                          height: 18,\r\n                          color: theme.palette.text.hint,\r\n                        }}\r\n                      />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        noWrap={true}\r\n                        style={{ marginLeft: theme.spacing(1) }}\r\n                      >\r\n                        {timeSince(row.age)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 160 }} align=\"right\">\r\n                    {renderThreadStatus(row)}\r\n                  </TableCell>\r\n                </React.Fragment>\r\n              );\r\n              const wrapComponent = (\r\n                <TableRow className={classes.tableRow} key={row.uuid}>\r\n                  {innerRow}\r\n                </TableRow>\r\n              );\r\n              return wrapComponent;\r\n            })}\r\n        {!IsLoadingResults && renderEmptyRows()}\r\n      </TableBody>\r\n      <TableFooter>\r\n        <TableRow>\r\n          {rowsLength > 0 && (\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={tableData.totalRowsCount}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          )}\r\n        </TableRow>\r\n      </TableFooter>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default React.memo(AddTrackUrlTable);\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { motion } from \"framer-motion\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  spinner: {\r\n    width: 18,\r\n    height: 18,\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    background: \"white\",\r\n    borderRadius: \"50%\",\r\n  },\r\n}));\r\nconst SpinnerGrow = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <motion.div\r\n      initial={{ scale: 0.25, opacity: 1 }}\r\n      animate={{ scale: 1, opacity: 0 }}\r\n      transition={{ repeat: Infinity, duration: 0.9 }}\r\n    >\r\n      <div className={classes.spinner}></div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SpinnerGrow;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport scrapingThreadsActions from \"../actions/ScrapingThread\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Divider,\r\n  Input,\r\n  TableHead,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  ButtonGroup,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\n\r\nimport AddCircleIcon from \"@material-ui/icons/Add\";\r\nimport sessionStore from \"../store/session\";\r\nimport AddTrackUrlTable from \"../components/Tables/AddTrackUrl\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport SpinnerGrow from \"../components/SpinnerGrow\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\n\r\nexport default function CustomPaginationActionsTable() {\r\n  const [UrlInputValue, setUrlInputValue] = useState(\"\");\r\n  const classes = useStyles2();\r\n\r\n  const history = useHistory();\r\n\r\n  const theme = useTheme();\r\n\r\n  const createThread = () => {\r\n    scrapingThreadsActions.create(UrlInputValue);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <div\r\n        style={{\r\n          padding: theme.spacing(2),\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"nowrap\",\r\n        }}\r\n      >\r\n        {/* <ButtonGroup>\r\n            <TextField\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              placeholder=\"URL to track\"\r\n            ></TextField>\r\n            <Button>Track</Button>\r\n          </ButtonGroup> */}\r\n        <FormControl fullWidth size=\"small\" className={classes.margin}>\r\n          <OutlinedInput\r\n            id=\"standard-adornment-amount\"\r\n            size=\"small\"\r\n            placeholder=\"URL to track\"\r\n            value={UrlInputValue}\r\n            onChange={(evt) => {\r\n              setUrlInputValue(evt.target.value);\r\n            }}\r\n            onKeyPress={(evt) => {\r\n              if (evt.key === \"Enter\") {\r\n                createThread();\r\n              }\r\n            }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <LinkIcon />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disableElevation\r\n          startIcon={<AddCircleIcon />}\r\n          endIcon={<SpinnerGrow />}\r\n          onClick={createThread}\r\n          style={{ whiteSpace: \"nowrap\", marginLeft: theme.spacing(2) }}\r\n        >\r\n          Add URL\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <AddTrackUrlTable />\r\n    </TableContainer>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/l4c.2c7345d8.svg\";","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  FormControl,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Button,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nimport sessionActions from \"../actions/Session\";\r\nimport sessionStore from \"../store/session\";\r\nimport LinksForCashIcon from \"../assets/l4c.svg\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  formPaper: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 420, // Blaze it\r\n    width: \"100%\",\r\n    margin: \"0 auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputField: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst LoginView = () => {\r\n  const [IsAuthenticating, setIsAuthenticating] = useState(false);\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Password, setPassword] = useState(\"\");\r\n  const history = useHistory();\r\n  const storedAuthToken = sessionStore.getAuthenticationToken();\r\n  const isAuthenticating = sessionStore.isAuthenticating();\r\n  const performAuthentication = () => {\r\n    setTimeout(async () => {\r\n      const authData = {\r\n        email: Email,\r\n        password: Password,\r\n      };\r\n\r\n      sessionActions.userAuthenticate(authData).then();\r\n    });\r\n  };\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const onUserAuthenticatingChanged = () => {\r\n    setIsAuthenticating(sessionStore.isAuthenticating());\r\n  };\r\n  useEffect(() => {\r\n    if (sessionStore.isAuthenticated()) {\r\n      history.push(\"/\");\r\n      return <div></div>;\r\n    }\r\n\r\n    // Bind event listeners\r\n    sessionStore.addChangeListener(\r\n      ActionTypes.Session.IS_AUTHENTICATING,\r\n      onUserAuthenticatingChanged\r\n    );\r\n\r\n    if (storedAuthToken && !isAuthenticating) {\r\n      sessionActions.tryAuthentication();\r\n    }\r\n    return () => {\r\n      sessionStore.removeChangeListener(\r\n        ActionTypes.Session.IS_AUTHENTICATING,\r\n        onUserAuthenticatingChanged\r\n      );\r\n    };\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"inline-flex\",\r\n        flexDirection: \"column\",\r\n        margin: \"0 auto\",\r\n        width: 420,\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          marginBottom: theme.spacing(3),\r\n        }}\r\n      >\r\n        <img\r\n          src={LinksForCashIcon}\r\n          style={{ height: 32, marginRight: theme.spacing(2) }}\r\n          alt=\"Linksforcash\"\r\n        />\r\n        <Typography variant=\"h5\">Linksforcash</Typography>\r\n      </div>\r\n      <Paper className={classes.formPaper}>\r\n        <Typography variant=\"h6\">Sign in</Typography>\r\n\r\n        <FormControl fullWidth className={classes.inputField}>\r\n          <OutlinedInput\r\n            id=\"standard-adornment-amount\"\r\n            disabled={!!IsAuthenticating}\r\n            value={Email}\r\n            placeholder=\"Email / Username\"\r\n            onChange={(evt) => {\r\n              setEmail(evt.target.value);\r\n            }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <EmailIcon />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <FormControl fullWidth className={classes.inputField}>\r\n          <OutlinedInput\r\n            id=\"standard-adornment-amount\"\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            disabled={!!IsAuthenticating}\r\n            onChange={(evt) => {\r\n              setPassword(evt.target.value);\r\n            }}\r\n            onKeyPress={(evt) => {\r\n              if (evt.key === \"Enter\") {\r\n                performAuthentication();\r\n              }\r\n            }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <LockIcon />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          disableElevation\r\n          color=\"secondary\"\r\n          style={{ marginTop: theme.spacing(2) }}\r\n          onClick={performAuthentication}\r\n          disabled={!!IsAuthenticating}\r\n        >\r\n          {IsAuthenticating ? (\r\n            <CircularProgress\r\n              style={{ color: \"white\", width: 24, height: 24 }}\r\n            />\r\n          ) : (\r\n            \"Login\"\r\n          )}\r\n        </Button>\r\n\r\n        <Link\r\n          to=\"reset-password\"\r\n          fullWidth\r\n          style={{ textAlign: \"center\", marginTop: theme.spacing(1) }}\r\n        >\r\n          Forgot your password?\r\n        </Link>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport { prettyTimelapse, timeSince } from \"../../helpers/time\";\r\nimport clsx from \"clsx\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  IconButton,\r\n  LinearProgress,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport uiActions from \"../../actions/UI\";\r\nimport UserApi from \"../../api/User\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport sessionStore from \"../../store/session\";\r\nimport tableStore from \"../../store/Tables\";\r\nimport scrapingThreadsStore from \"../../store/ScrapingThreads\";\r\nimport TablePaginationActions from \"./Pagination\";\r\nimport EmptyTablePlaceholder from \"./EmptyPlaceholder\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport ActionTypes from \"../../constants/ActionTypes\";\r\nimport scrapingThreadsActions from \"../../actions/ScrapingThread\";\r\nimport {\r\n  Add,\r\n  AddCircle,\r\n  Delete,\r\n  Today,\r\n  Search,\r\n  AssignmentTurnedIn,\r\n} from \"@material-ui/icons\";\r\n\r\nimport tableActions from \"../../actions/Table\";\r\nimport TableNames from \"../../constants/Tables\";\r\nimport TableData from \"../../models/TableData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableRow: {\r\n    height: 70,\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  emptyRow: {\r\n    height: 70,\r\n    backgroundColor: \"white!important\",\r\n    \"&:first-child td\": {\r\n      paddingTop: \"8rem\",\r\n      paddingBottom: \"8rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst THIS_TABLE_NAME = TableNames.USERS_ADMIN;\r\n\r\nconst ManageUsersTable = ({ filter }) => {\r\n  let [tableData, setTableData] = useState(\r\n    tableStore.getTableData(THIS_TABLE_NAME)\r\n  );\r\n\r\n  const [SelectedRows, setSelectedRows] = useState([]);\r\n\r\n  const HasTableData = tableData !== undefined;\r\n\r\n  if (!HasTableData) {\r\n    tableData = TableData.defaults(THIS_TABLE_NAME);\r\n  }\r\n  const rowsPerPage = tableData.rowsPerPage;\r\n  const page = tableData.page;\r\n  let rows = tableData.rows;\r\n\r\n  const IsLoadingResults = tableData.isLoading;\r\n  let hasInheritedRows = false;\r\n  if (IsLoadingResults && tableData.previousTableData) {\r\n    rows = tableData.previousTableData.rows;\r\n    hasInheritedRows = true;\r\n  }\r\n\r\n  const rowsLength = Array.isArray(rows) ? rows.length : 0;\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, rowsLength - page * rowsPerPage) +\r\n    (rowsLength > 1 ? 0 : 1);\r\n\r\n  const isLoadingResults = tableData ? tableData.isLoading : true;\r\n  const classes = useStyles();\r\n  // const emptyRows =\r\n  //   rowsPerPage - Math.min(rowsPerPage, rowsLength - page * rowsPerPage);\r\n  const confirm = useConfirm();\r\n  const deleteUser = async (userId, username) => {\r\n    confirm({\r\n      description: `Are you sure you want to delete \"${username}\" (ID: ${userId})?`,\r\n      title: `Delete user \"${username}\"`,\r\n    })\r\n      .then(async () => {\r\n        const res = await UserApi.DeleteUsers([userId]);\r\n        if (res && res.success) {\r\n          uiActions.showSnackbar(`User \"${username}\" deleted`, \"success\");\r\n          syncTableData({});\r\n        }\r\n      })\r\n      .catch();\r\n  };\r\n\r\n  const syncTableData = ({ newPage, newRowsPerPage }) => {\r\n    tableActions.createTableData({\r\n      rowsPerPage: newRowsPerPage !== undefined ? newRowsPerPage : rowsPerPage,\r\n      page:\r\n        newRowsPerPage !== -1 ? (newPage !== undefined ? newPage : page) : 0,\r\n      filter: filter || \"\",\r\n      tableName: THIS_TABLE_NAME,\r\n      previousRowCount:\r\n        tableData && tableData.totalRowsCount\r\n          ? tableData.totalRowsCount\r\n          : undefined,\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"handleChangePage.newPage\", newPage);\r\n    syncTableData({ newPage, newFilter: filter });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    const newRowsPerPage = parseInt(event.target.value, 10);\r\n    syncTableData({ newRowsPerPage, newPage: 0, newFilter: filter });\r\n  };\r\n\r\n  /**\r\n   * @type {Object} obj\r\n   * @type {TableData} obj.tableData\r\n   */\r\n  const onTableRowsDataUpdated = ({ tableData }) => {\r\n    if (tableData.tableName === THIS_TABLE_NAME) {\r\n      const foundTable = tableStore.getByTableName(THIS_TABLE_NAME);\r\n      console.log(\"foundTable\", foundTable);\r\n      setTableData(foundTable);\r\n    }\r\n  };\r\n  console.log(\"rendering\", tableData);\r\n\r\n  const selectAllRows = (evt) => {\r\n    const checked = evt.target.checked;\r\n    if (!checked) {\r\n      setSelectedRows([]);\r\n    } else if (checked) {\r\n      if (Array.isArray(rows)) {\r\n        setSelectedRows(rows.map((row) => row.id));\r\n      }\r\n    }\r\n  };\r\n  const onScrapingThreadCreated = () => {\r\n    setTimeout(() => {\r\n      syncTableData({ newPage: 0 });\r\n    });\r\n  };\r\n  const bindListeners = () => {\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_CREATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_UPDATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    scrapingThreadsStore.addChangeListener(\r\n      ActionTypes.ScrapingThread.THREAD_CREATED,\r\n      onScrapingThreadCreated\r\n    );\r\n    return () => {\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_CREATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_UPDATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      scrapingThreadsStore.removeChangeListener(\r\n        ActionTypes.Table.ROW_ADDED,\r\n        onScrapingThreadCreated\r\n      );\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Means data has not yet loaded nor requested\r\n    if (!HasTableData || filter !== tableData.filter) {\r\n      setTimeout(() => {\r\n        syncTableData({});\r\n      });\r\n    }\r\n    return bindListeners();\r\n  });\r\n  // if (rows.length <= 0) {\r\n  //   return <EmptyTablePlaceholder />;\r\n  // }\r\n\r\n  const theme = useTheme();\r\n  const onRowSelectionChanged = (id) => {\r\n    console.log(SelectedRows);\r\n    const alreadySelectedIndex = SelectedRows.findIndex((c) => c === id);\r\n    const alreadySelected =\r\n      alreadySelectedIndex !== -1 && alreadySelectedIndex !== false;\r\n    if (alreadySelected) {\r\n      SelectedRows.splice(alreadySelectedIndex, 1);\r\n      setSelectedRows([...SelectedRows]);\r\n    } else {\r\n      setSelectedRows([id, ...SelectedRows]);\r\n    }\r\n  };\r\n  const deleteSelectedUsers = () => {\r\n    if (SelectedRows.length) {\r\n      confirm({\r\n        description: `Are you sure you want to delete ${SelectedRows.length} users?`,\r\n        title: `Delete ${SelectedRows.length} users`,\r\n      })\r\n        .then(async () => {\r\n          const res = await UserApi.DeleteUsers(SelectedRows);\r\n          if (res && res.success) {\r\n            uiActions.showSnackbar(`Users deleted successfully`, \"success\");\r\n            setSelectedRows([]);\r\n            setTimeout(() => {\r\n              syncTableData({});\r\n            });\r\n          }\r\n        })\r\n        .catch();\r\n    }\r\n  };\r\n  const renderName = (row) => {\r\n    let toWrap = undefined;\r\n    if (row.name) {\r\n      toWrap = (\r\n        <React.Fragment>\r\n          {row.name}\r\n          <Typography variant=\"caption\">{row.username}</Typography>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n    toWrap = row.username;\r\n    return <TableCell>{toWrap}</TableCell>;\r\n  };\r\n  const renderEmptyRows = () => {\r\n    if (rowsPerPage === rowsLength) {\r\n      return \"\";\r\n    }\r\n    const isJustFilling = rowsLength > 0;\r\n    const hasFilterApplied =\r\n      tableData.totalRowsCount < tableData.unfilteredRowsCount;\r\n    const _renderHint = () => {\r\n      if (hasFilterApplied) {\r\n        return (\r\n          <Typography variant=\"h6\" style={{ color: theme.palette.text.hint }}>\r\n            Try changing filter options\r\n          </Typography>\r\n        );\r\n      }\r\n    };\r\n    const _emptyRowContent = () => (\r\n      <TableCell colspan=\"6\">\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexDirection=\"column\"\r\n        >\r\n          {!isJustFilling && (\r\n            <Search\r\n              style={{\r\n                color: theme.palette.text.disabled,\r\n                width: 48,\r\n                height: 48,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant={isJustFilling ? \"h6\" : \"h4\"}\r\n              style={{\r\n                color: isJustFilling\r\n                  ? theme.palette.text.hint\r\n                  : theme.palette.text.primary,\r\n              }}\r\n            >\r\n              No{rowsLength > 0 ? \" more\" : \"\"} users found\r\n            </Typography>\r\n          </Box>\r\n          {_renderHint()}\r\n        </Box>\r\n      </TableCell>\r\n    );\r\n\r\n    const _createRow = () => (\r\n      <TableRow\r\n        className={clsx({\r\n          [classes.tableRow]: true,\r\n          [classes.emptyRow]: true,\r\n        })}\r\n        key={Math.random()}\r\n      >\r\n        {_emptyRowContent()}\r\n      </TableRow>\r\n    );\r\n\r\n    return _createRow();\r\n  };\r\n  return (\r\n    <Table className={classes.table} stickyHeader>\r\n      {/* <LinearProgress\r\n        variant=\"indeterminate\"\r\n        color=\"secondary\"\r\n        style={{ height: 2, opacity: IsLoadingResults ? \"0.5\" : 0 }}\r\n      /> */}\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell component=\"th\" colspan=\"6\">\r\n            <Box display=\"flex\" width=\"100%\">\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  disabled={rows.length < 1}\r\n                  checked={rows.length && SelectedRows.length === rows.length}\r\n                  onChange={selectAllRows}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: theme.spacing(1),\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={`Permanently delete ${SelectedRows.length} users`}\r\n                >\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    disabled={SelectedRows.length < 1}\r\n                    onClick={deleteSelectedUsers}\r\n                  >\r\n                    <Badge badgeContent={SelectedRows.length} color=\"secondary\">\r\n                      <Delete />\r\n                    </Badge>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: theme.spacing(1),\r\n                }}\r\n              >\r\n                <Tooltip title=\"Register new user\">\r\n                  <Button\r\n                    style={{ marginLeft: theme.spacing(1) }}\r\n                    startIcon={<AddCircle color=\"primary\" />}\r\n                    component={RouterLink}\r\n                    to=\"/add-user\"\r\n                  >\r\n                    Add user\r\n                  </Button>\r\n                </Tooltip>\r\n              </div>\r\n            </Box>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {isLoadingResults && !hasInheritedRows\r\n          ? [...Array(rowsPerPage !== undefined ? rowsPerPage : 10).keys()].map(\r\n              (x) => (\r\n                <TableRow key={x} style={{ height: 56 }}>\r\n                  {/* {[...Array(3).keys()].map((c) => (\r\n                  <TableCell key={c} colSpan={6 / c}>\r\n                    <Skeleton animation=\"wave\" style={{ height: 48 }} />\r\n                  </TableCell>\r\n                ))} */}\r\n                  <TableCell width=\"45%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\" align=\"right\">\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      style={{\r\n                        width: \"75%\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )\r\n          : rows.map((row) => {\r\n              const innerRow = (\r\n                <React.Fragment>\r\n                  <TableCell width=\"64px\">\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      checked={SelectedRows.includes(row.id)}\r\n                      onChange={(evt) => {\r\n                        onRowSelectionChanged(row.id);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  {renderName(row)}\r\n                  <TableCell>\r\n                    <Link href={row.url} target=\"_blank\">\r\n                      {row.email}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 160 }} align=\"right\">\r\n                    <Box\r\n                      display=\"inline-flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"start\"\r\n                    >\r\n                      <Today\r\n                        style={{\r\n                          width: 18,\r\n                          height: 18,\r\n                          color: theme.palette.text.hint,\r\n                        }}\r\n                      />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        noWrap={true}\r\n                        style={{ marginLeft: theme.spacing(1) }}\r\n                      >\r\n                        {timeSince(row.age)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 48 }} align=\"right\">\r\n                    <Box alignItems=\"center\" flexWrap=\"nowrap\" display=\"flex\">\r\n                      <AssignmentTurnedIn\r\n                        style={{\r\n                          width: 18,\r\n                          height: 18,\r\n                          color: theme.palette.text.hint,\r\n                        }}\r\n                      />\r\n\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        noWrap={true}\r\n                        style={{\r\n                          marginLeft: theme.spacing(1),\r\n                          whiteSpace: \"nowrap\",\r\n                        }}\r\n                      >\r\n                        {row.scrapedJobs || 0} Inserted jobs\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <IconButton\r\n                      size=\"small\"\r\n                      onClick={() => {\r\n                        deleteUser(row.id, row.username);\r\n                      }}\r\n                    >\r\n                      <Delete fontSize=\"small\" />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </React.Fragment>\r\n              );\r\n              const wrapComponent = (\r\n                <TableRow className={classes.tableRow} key={row.uuid}>\r\n                  {innerRow}\r\n                </TableRow>\r\n              );\r\n              return wrapComponent;\r\n            })}\r\n        {!IsLoadingResults && renderEmptyRows()}\r\n      </TableBody>\r\n      <TableFooter>\r\n        <TableRow>\r\n          {rowsLength > 0 && (\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={6}\r\n              count={tableData.totalRowsCount}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          )}\r\n        </TableRow>\r\n      </TableFooter>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ManageUsersTable;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport scrapingThreadsActions from \"../actions/ScrapingThread\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ManageUsersTable from \"../components/Tables/ManageUsers\";\r\nimport {\r\n  Divider,\r\n  Input,\r\n  TableHead,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  ButtonGroup,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport sessionStore from \"../store/session\";\r\nimport AddTrackUrlTable from \"../components/Tables/AddTrackUrl\";\r\nimport dispatcher from \"../dispatcher\";\r\nimport { Search } from \"@material-ui/icons\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\nlet filterTimeout = undefined;\r\nexport default function ManageUsersView() {\r\n  const [Filter, setFilter] = useState(\"\");\r\n  const classes = useStyles2();\r\n\r\n  const history = useHistory();\r\n\r\n  const theme = useTheme();\r\n\r\n  const onFilterChanged = (f) => {\r\n    clearTimeout(filterTimeout);\r\n    filterTimeout = setTimeout(() => {\r\n      console.log(\"Setting filter\");\r\n      setFilter(f);\r\n    }, 500);\r\n  };\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <div\r\n        style={{\r\n          padding: theme.spacing(2),\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"nowrap\",\r\n        }}\r\n      >\r\n        {/* <ButtonGroup>\r\n            <TextField\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              placeholder=\"URL to track\"\r\n            ></TextField>\r\n            <Button>Track</Button>\r\n          </ButtonGroup> */}\r\n        <FormControl fullWidth size=\"small\" className={classes.margin}>\r\n          <OutlinedInput\r\n            id=\"standard-adornment-amount\"\r\n            size=\"small\"\r\n            placeholder=\"Search users\"\r\n            onChange={(evt) => {\r\n              onFilterChanged(evt.target.value);\r\n            }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disableElevation\r\n          startIcon={<Search />}\r\n          style={{ whiteSpace: \"nowrap\", marginLeft: theme.spacing(2) }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <ManageUsersTable filter={Filter} />\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Checkbox,\r\n  Divider,\r\n  Button,\r\n  FormControlLabel,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  FormGroup,\r\n  FormLabel,\r\n  FormControl,\r\n  ButtonGroup,\r\n  FormHelperText,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport UserApi from \"../api/User\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport LinearScaleIcon from \"@material-ui/icons/LinearScale\";\r\nimport {\r\n  ArrowBack,\r\n  Check,\r\n  Mail,\r\n  Person,\r\n  Visibility,\r\n  VisibilityOff,\r\n  Lock,\r\n} from \"@material-ui/icons\";\r\n\r\nimport uiActions from \"../actions/UI\";\r\nimport ApiError from \"../models/ApiError\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"inline-block\",\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  box: {\r\n    \"& > *\": {\r\n      marginBottom: theme.spacing(1.5),\r\n    },\r\n  },\r\n  saveBtn: {\r\n    color: theme.palette.success.main,\r\n  },\r\n  abortBtn: {\r\n    color: theme.palette.error.dark,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AddUserView = () => {\r\n  const [Password, setPassword] = useState(\"\");\r\n  const [ShowPassword, setShowPassword] = useState(false);\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [IsAdmin, setIsAdmin] = useState(false);\r\n  const [FullName, setFullName] = useState(\"\");\r\n  const [Username, setUsername] = useState(\"\");\r\n\r\n  const [InputErrors, setInputErrors] = useState([]);\r\n\r\n  const hasError = (field) => {\r\n    return InputErrors.includes(field);\r\n  };\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const onGoBack = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!ShowPassword);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const performAddUser = async () => {\r\n    let result = await UserApi.AddUser({\r\n      email: Email,\r\n      username: Username,\r\n      name: FullName,\r\n      password: Password,\r\n      isAdmin: IsAdmin,\r\n    });\r\n\r\n    if (ApiError.isError(result)) {\r\n      const vars = Object.keys(result.variables);\r\n      setInputErrors(vars);\r\n    } else {\r\n      history.goBack();\r\n      uiActions.showSnackbar(`User \"${Username}\" created.`, \"success\");\r\n    }\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <div\r\n        style={{\r\n          display: \"inline-flex\",\r\n          alignItems: \"center\",\r\n          marginBottom: theme.spacing(1),\r\n        }}\r\n      >\r\n        <IconButton size=\"small\" onClick={onGoBack}>\r\n          <ArrowBack size=\"small\" />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" style={{ marginLeft: theme.spacing(1) }}>\r\n          Add new user\r\n        </Typography>\r\n      </div>\r\n      <Paper className={classes.paper}>\r\n        <Box\r\n          className={classes.box}\r\n          display=\"inline-flex\"\r\n          alignItems=\"start\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Typography\r\n            variant=\"body1\"\r\n            style={{ color: theme.palette.text.hint }}\r\n          >\r\n            User information\r\n          </Typography>\r\n\r\n          <FormGroup row>\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"full-name-input\">Full name</InputLabel>\r\n              <OutlinedInput\r\n                id=\"full-name-input\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <FaceIcon />\r\n                  </InputAdornment>\r\n                }\r\n                value={FullName}\r\n                required\r\n                min=\"4\"\r\n                name=\"fullName\"\r\n                max=\"50\"\r\n                onChange={(evt) => {\r\n                  setFullName(evt.target.value);\r\n                }}\r\n                type=\"text\"\r\n                size=\"small\"\r\n                placeholder=\"John doe\"\r\n                labelWidth={70}\r\n                error={hasError(\"name\")}\r\n                aria-describedby=\"full-name-helper\"\r\n              />\r\n              <FormHelperText\r\n                id=\"full-name-helper\"\r\n                error={hasError(\"name\")}\r\n                className={clsx({ [classes.hide]: !hasError(\"name\") })}\r\n              >\r\n                3-50 characters\r\n              </FormHelperText>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{ marginLeft: theme.spacing(1) }}\r\n            >\r\n              <InputLabel htmlFor=\"email-input\">Email</InputLabel>\r\n              <OutlinedInput\r\n                id=\"email-input\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <Mail />\r\n                  </InputAdornment>\r\n                }\r\n                value={Email}\r\n                required\r\n                onChange={(evt) => {\r\n                  setEmail(evt.target.value);\r\n                }}\r\n                type=\"text\"\r\n                size=\"small\"\r\n                placeholder=\"johndoe@mail.com\"\r\n                labelWidth={40}\r\n                error={hasError(\"email\")}\r\n                aria-describedby=\"email-helper\"\r\n              />\r\n              <FormHelperText\r\n                id=\"email-helper\"\r\n                error={hasError(\"email\")}\r\n                className={clsx({ [classes.hide]: !hasError(\"email\") })}\r\n              >\r\n                Must be a valid email\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </FormGroup>\r\n\r\n          <Typography\r\n            variant=\"body1\"\r\n            style={{\r\n              color: theme.palette.text.hint,\r\n              marginTop: theme.spacing(3),\r\n            }}\r\n          >\r\n            Authentication credentials\r\n          </Typography>\r\n\r\n          <FormGroup row>\r\n            <FormControl variant=\"outlined\">\r\n              <InputLabel htmlFor=\"username-input\">Username</InputLabel>\r\n              <OutlinedInput\r\n                id=\"username-input\"\r\n                required\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <Person />\r\n                  </InputAdornment>\r\n                }\r\n                value={Username}\r\n                onChange={(evt) => {\r\n                  setUsername(evt.target.value);\r\n                }}\r\n                type=\"text\"\r\n                size=\"small\"\r\n                placeholder=\"johndoe12\"\r\n                labelWidth={70}\r\n                error={hasError(\"username\")}\r\n                aria-describedby=\"username-helper\"\r\n              />\r\n              <FormHelperText\r\n                id=\"username-helper\"\r\n                error={hasError(\"username\")}\r\n                className={clsx({ [classes.hide]: !hasError(\"username\") })}\r\n              >\r\n                6-32 characters\r\n              </FormHelperText>\r\n            </FormControl>\r\n            <FormControl\r\n              variant=\"outlined\"\r\n              style={{ marginLeft: theme.spacing(1) }}\r\n            >\r\n              <InputLabel htmlFor=\"password-input\">Password</InputLabel>\r\n              <OutlinedInput\r\n                id=\"password-input\"\r\n                startAdornment={\r\n                  <InputAdornment position=\"start\">\r\n                    <Lock />\r\n                  </InputAdornment>\r\n                }\r\n                type={ShowPassword ? \"text\" : \"password\"}\r\n                size=\"small\"\r\n                placeholder={\"******\"}\r\n                required\r\n                value={Password}\r\n                onChange={(evt) => {\r\n                  setPassword(evt.target.value);\r\n                }}\r\n                endAdornment={\r\n                  <InputAdornment position=\"end\">\r\n                    <IconButton\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                      edge=\"end\"\r\n                    >\r\n                      {ShowPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  </InputAdornment>\r\n                }\r\n                labelWidth={70}\r\n                error={hasError(\"password\")}\r\n                aria-describedby=\"password-helper\"\r\n              />\r\n              <FormHelperText\r\n                id=\"password-helper\"\r\n                error={hasError(\"password\")}\r\n                className={clsx({ [classes.hide]: !hasError(\"password\") })}\r\n              >\r\n                6-32 characters\r\n              </FormHelperText>\r\n            </FormControl>\r\n          </FormGroup>\r\n          <Typography\r\n            variant=\"body1\"\r\n            style={{\r\n              color: theme.palette.text.hint,\r\n              marginTop: theme.spacing(3),\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            Privileges\r\n          </Typography>\r\n          <FormControl component=\"fieldset\">\r\n            <FormGroup row>\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                    checked={IsAdmin}\r\n                    onChange={(evt) => {\r\n                      setIsAdmin(!IsAdmin);\r\n                    }}\r\n                  />\r\n                }\r\n                label={\"Admin\"}\r\n              />\r\n            </FormGroup>\r\n          </FormControl>\r\n          <Box\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            style={{ marginTop: theme.spacing(2) }}\r\n          >\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              startIcon={<Check />}\r\n              onClick={performAddUser}\r\n            >\r\n              Confirm\r\n            </Button>\r\n            <Button\r\n              variant=\"text\"\r\n              onClick={onGoBack}\r\n              style={{ marginLeft: theme.spacing(1) }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUserView;\r\n","import MakeRequest from \"./_Api\";\r\nimport UrlTrackingThread from \"../models/ScrapingThread\";\r\nimport User from \"../models/User\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\n\r\nexport default class ScrapingThread {\r\n  static async Delete(threadIds) {\r\n    return await MakeRequest.post(\"/delete-scraping-threads\", threadIds);\r\n  }\r\n}\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Menu, Button, IconButton } from \"@material-ui/core\";\r\nimport { Close, Public } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    \"&:before\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:focus\": {\r\n      border: \"none\",\r\n      outline: \"none\",\r\n    },\r\n    \"& .MuiSelect-select \": {\r\n      backgroundColor: \"transparent!important\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  selectedCountriesContainer: {\r\n    display: \"inline-flex\",\r\n    maxWidth: 520,\r\n    flexWrap: \"nowrap\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nconst names = [\"United States\", \"Germany\", \"United Kingdom\"];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nfunction CountryFilter({ Countries }) {\r\n  const [SelectedCountries, setSelectedCountries] = useState([]);\r\n  const anchorRef = React.useRef(null);\r\n  const [MenuOpen, setMenuOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const closeMenu = (evt) => {\r\n    if (anchorRef.current && anchorRef.current.contains(evt.target)) {\r\n      return;\r\n    }\r\n    return setMenuOpen(false);\r\n  };\r\n  const toggleMenu = (evt) => {\r\n    setMenuOpen(true);\r\n  };\r\n  const removeCountry = () => {};\r\n  const renderSelectedCountries = () => {\r\n    return SelectedCountries.map((value) => (\r\n      <Chip\r\n        variant=\"outlined\"\r\n        key={value}\r\n        label={value}\r\n        icon={<Close />}\r\n        onClick={() => {\r\n          removeCountry(value);\r\n        }}\r\n        className={classes.chip}\r\n      />\r\n    ));\r\n  };\r\n\r\n  const countriesContainerRef = useRef(null);\r\n  const findElementsInViewCount = () => {\r\n    const containerElement = countriesContainerRef.current;\r\n    const visibleWidth = containerElement.clientWidth;\r\n    // Accumulate elemnts width until we overflow\r\n    let accumulatedWidth = 0;\r\n    let numOfElementsInView = 0;\r\n\r\n    for (const element of containerElement.childNodes) {\r\n      accumulatedWidth += element.offsetWidth;\r\n      if (accumulatedWidth >= visibleWidth) {\r\n        break;\r\n      }\r\n      numOfElementsInView++;\r\n    }\r\n\r\n    return numOfElementsInView;\r\n  };\r\n  const hideNonVisibleChips = () => {\r\n    const numOfVisibleElements = findElementsInViewCount();\r\n    const containerElement = countriesContainerRef.current;\r\n    let childrenLen = containerElement.children.length;\r\n    console.log(\"skipping\", numOfVisibleElements, \"vs \", childrenLen);\r\n    let gotTruncated = false;\r\n    while (containerElement.children.length > numOfVisibleElements) {\r\n      gotTruncated = true;\r\n      containerElement.removeChild(\r\n        containerElement.children[numOfVisibleElements]\r\n      );\r\n    }\r\n  };\r\n  const countryIsSelected = (country) => {\r\n    return SelectedCountries.includes(country);\r\n  };\r\n  const toggleCountry = (name) => {\r\n    const countryIndex = SelectedCountries.indexOf(name);\r\n    if (countryIndex !== -1) {\r\n      const clone = [...SelectedCountries];\r\n      clone.splice(countryIndex, 1);\r\n      setSelectedCountries(clone);\r\n    } else {\r\n      setSelectedCountries([...SelectedCountries, name]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    hideNonVisibleChips();\r\n  });\r\n  return (\r\n    <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\r\n      <div\r\n        ref={countriesContainerRef}\r\n        className={classes.selectedCountriesContainer}\r\n      >\r\n        {renderSelectedCountries()}\r\n      </div>\r\n\r\n      <div style={{ position: \"relative\" }}>\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={toggleMenu}\r\n          ref={anchorRef}\r\n        >\r\n          ...79 More Countries\r\n        </Button>\r\n\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          open={MenuOpen}\r\n          keepMounted\r\n          onClose={closeMenu}\r\n          anchorEl={\r\n            SelectedCountries.length > 0\r\n              ? anchorRef.current\r\n              : countriesContainerRef.current\r\n          }\r\n        >\r\n          {Countries.map((name) => (\r\n            <MenuItem\r\n              key={name}\r\n              onClick={() => {\r\n                toggleCountry(name);\r\n              }}\r\n              value={name}\r\n              style={getStyles(name, personName, theme)}\r\n            >\r\n              <Checkbox\r\n                color=\"secondary\"\r\n                checked={countryIsSelected(name)}\r\n                size=\"small\"\r\n                disableRipple\r\n              />\r\n              {name}\r\n            </MenuItem>\r\n          ))}\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(CountryFilter);\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport const isFunction = function (obj) {\r\n  return !!(obj && obj.constructor && obj.call && obj.apply);\r\n};\r\n","function getMonday() {\r\n  const date = new Date();\r\n  let day = date.getDay() || 7;\r\n  if (day !== 1) date.setHours(-24 * (day - 1));\r\n  date.setHours(0);\r\n  return date;\r\n}\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default [\r\n  {\r\n    label: \"Clear\",\r\n    startDate: null,\r\n    endDate: null,\r\n  },\r\n  {\r\n    label: \"Today\",\r\n    startDate: new Date(),\r\n    endDate: new Date().setDate(new Date().getDate() + 1),\r\n  },\r\n  {\r\n    label: \"Yesterday\",\r\n    startDate: new Date().setDate(new Date().getDate() - 2),\r\n    endDate: new Date().setDate(new Date().getDate() - 1),\r\n  },\r\n  {\r\n    label: \"This week\",\r\n    startDate: getMonday(),\r\n    endDate: new Date(),\r\n  },\r\n  {\r\n    label: \"Last 7 days\",\r\n    startDate: new Date().setDate(new Date().getDate() - 7),\r\n    endDate: new Date(),\r\n  },\r\n  {\r\n    label: \"This month\",\r\n    startDate: new Date(new Date().getFullYear(), new Date().getMonth(), 1),\r\n    endDate: new Date(),\r\n  },\r\n  {\r\n    label: \"Last month\",\r\n    startDate: (() => {\r\n      const date = new Date(new Date().getFullYear(), new Date().getMonth(), 1);\r\n      date.setMonth(date.getMonth() - 1);\r\n      return date;\r\n    })(),\r\n    endDate: (() => {\r\n      function daysInMonth(month, year) {\r\n        return new Date(year, month, 0).getDate();\r\n      }\r\n      const ynow = new Date().getFullYear();\r\n      const mnow = new Date().getMonth();\r\n      const date = new Date(ynow, mnow, 1);\r\n      date.setMonth(date.getMonth() - 1);\r\n      date.setDate(daysInMonth(mnow, ynow));\r\n      return date;\r\n    })(),\r\n  },\r\n];\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { isFunction } from \"../../helpers/utils\";\r\nimport {\r\n  DateRangePicker,\r\n  DateRange,\r\n  DefinedRange,\r\n} from \"materialui-daterange-picker\";\r\nimport ClearAllIcon from \"@material-ui/icons/ClearAll\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport {\r\n  Menu,\r\n  Button,\r\n  IconButton,\r\n  ButtonGroup,\r\n  Divider,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Close,\r\n  Public,\r\n  FilterList as FilterListIcon,\r\n  KeyboardArrowDown as KeyboardArrowDownIcon,\r\n  FastForward,\r\n} from \"@material-ui/icons\";\r\nimport DateRanges from \"../../constants/DateRanges\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  select: {\r\n    \"&:before\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:after\": {\r\n      border: \"none\",\r\n    },\r\n    \"&:focus\": {\r\n      border: \"none\",\r\n      outline: \"none\",\r\n    },\r\n    \"& .MuiSelect-select \": {\r\n      backgroundColor: \"transparent!important\",\r\n      border: \"none\",\r\n    },\r\n  },\r\n  chips: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  chip: {\r\n    margin: 2,\r\n  },\r\n  noLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  selectedCountriesContainer: {\r\n    display: \"inline-flex\",\r\n    maxWidth: 520,\r\n    flexWrap: \"nowrap\",\r\n    overflow: \"hidden\",\r\n  },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 7 + ITEM_PADDING_TOP,\r\n      width: 250,\r\n    },\r\n  },\r\n};\r\n\r\nfunction getStyles(name, personName, theme) {\r\n  return {\r\n    fontWeight:\r\n      personName.indexOf(name) === -1\r\n        ? theme.typography.fontWeightRegular\r\n        : theme.typography.fontWeightMedium,\r\n  };\r\n}\r\n\r\nfunction DateCountryFilter({\r\n  Countries,\r\n  onCountriesChanged,\r\n  onDateRangeChanged,\r\n}) {\r\n  const [DateFilterOpen, setDateFilterOpen] = useState(false);\r\n  const [SelectedCountries, setSelectedCountries] = useState([]);\r\n\r\n  const [DateRange, setDateRange] = useState(null);\r\n  const anchorRef = React.useRef(null);\r\n  const [MenuOpen, setMenuOpen] = React.useState(false);\r\n\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [personName, setPersonName] = React.useState([]);\r\n\r\n  const closeMenu = (evt) => {\r\n    if (anchorRef.current && anchorRef.current.contains(evt.target)) {\r\n      return;\r\n    }\r\n    return setMenuOpen(false);\r\n  };\r\n  const toggleMenu = (evt) => {\r\n    setMenuOpen(true);\r\n  };\r\n  const toggleDateRangeFilter = () => {\r\n    setDateFilterOpen(!DateFilterOpen);\r\n  };\r\n\r\n  //   const renderSelectedCountries = () => {\r\n  //     return SelectedCountries.map((value) => (\r\n  //       <Chip\r\n  //         variant=\"outlined\"\r\n  //         key={value}\r\n  //         label={value}\r\n  //         icon={<Close />}\r\n  //         onClick={() => {\r\n  //           removeCountry(value);\r\n  //         }}\r\n  //         className={classes.chip}\r\n  //       />\r\n  //     ));\r\n  //   };\r\n\r\n  //   const countriesContainerRef = useRef(null);\r\n  //   const findElementsInViewCount = () => {\r\n  //     const containerElement = countriesContainerRef.current;\r\n  //     const visibleWidth = containerElement.clientWidth;\r\n  //     // Accumulate elemnts width until we overflow\r\n  //     let accumulatedWidth = 0;\r\n  //     let numOfElementsInView = 0;\r\n\r\n  //     for (const element of containerElement.childNodes) {\r\n  //       accumulatedWidth += element.offsetWidth;\r\n  //       if (accumulatedWidth >= visibleWidth) {\r\n  //         break;\r\n  //       }\r\n  //       numOfElementsInView++;\r\n  //     }\r\n\r\n  //     return numOfElementsInView;\r\n  //   };\r\n  //   const hideNonVisibleChips = () => {\r\n  //     const numOfVisibleElements = findElementsInViewCount();\r\n  //     const containerElement = countriesContainerRef.current;\r\n  //     let childrenLen = containerElement.children.length;\r\n  //     console.log(\"skipping\", numOfVisibleElements, \"vs \", childrenLen);\r\n  //     let gotTruncated = false;\r\n  //     while (containerElement.children.length > numOfVisibleElements) {\r\n  //       gotTruncated = true;\r\n  //       containerElement.removeChild(\r\n  //         containerElement.children[numOfVisibleElements]\r\n  //       );\r\n  //     }\r\n  //   };\r\n  const countryIsSelected = (country) => {\r\n    return SelectedCountries.includes(country);\r\n  };\r\n  const toggleCountry = (name) => {\r\n    const countryIndex = SelectedCountries.indexOf(name);\r\n    if (countryIndex !== -1) {\r\n      const clone = [...SelectedCountries];\r\n      clone.splice(countryIndex, 1);\r\n      handleCountriesChanged(clone);\r\n    } else {\r\n      handleCountriesChanged([...SelectedCountries, name]);\r\n    }\r\n  };\r\n\r\n  const clearCountries = () => {\r\n    handleCountriesChanged([]);\r\n    setTimeout(() => {\r\n      setMenuOpen(false);\r\n    });\r\n  };\r\n  const handleChangeDateRange = (dateRange) => {\r\n    if (!dateRange.startDate && !dateRange.endDate) {\r\n      setDateRange(null);\r\n    } else {\r\n      setDateRange(dateRange);\r\n    }\r\n\r\n    if (isFunction(onDateRangeChanged)) {\r\n      onDateRangeChanged(dateRange);\r\n    }\r\n  };\r\n\r\n  const handleCountriesChanged = (selectedCountries) => {\r\n    setSelectedCountries(selectedCountries);\r\n    if (isFunction(onCountriesChanged)) {\r\n      onCountriesChanged(selectedCountries);\r\n    }\r\n  };\r\n\r\n  const renderFilteringDateValue = () => {\r\n    const def = \"Filter by date\";\r\n    if (DateRange) {\r\n      const { startDate, endDate, label } = DateRange;\r\n\r\n      if (label) {\r\n        return label;\r\n      }\r\n      let _startDateText = \"\";\r\n      if (startDate) {\r\n        _startDateText = new Intl.DateTimeFormat(\"en\").format(startDate);\r\n      }\r\n      let _endDateText = \"\";\r\n      if (endDate) {\r\n        _endDateText = new Intl.DateTimeFormat(\"en\").format(endDate);\r\n      }\r\n      return (\r\n        <React.Fragment>\r\n          {_startDateText}\r\n          {_endDateText && (\r\n            <FastForward\r\n              style={{\r\n                width: 14,\r\n                height: 14,\r\n                color: theme.palette.text.disabled,\r\n                marginLeft: 4,\r\n                marginRight: 4,\r\n              }}\r\n            />\r\n          )}\r\n          {_endDateText}\r\n        </React.Fragment>\r\n      );\r\n    }\r\n\r\n    return def;\r\n  };\r\n  return (\r\n    <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\r\n      <div style={{ postiion: \"relative\" }}>\r\n        <div style={{ position: \"fixed\", zIndex: 129831298319 }}>\r\n          <DateRangePicker\r\n            open={DateFilterOpen}\r\n            definedRanges={DateRanges}\r\n            toggle={toggleDateRangeFilter}\r\n            onChange={handleChangeDateRange}\r\n          />\r\n        </div>\r\n      </div>\r\n      <ButtonGroup variant=\"outlined\" style={{ marginLeft: theme.spacing(1) }}>\r\n        <Button\r\n          startIcon={\r\n            <FilterListIcon style={{ color: theme.palette.text.disabled }} />\r\n          }\r\n          endIcon={<KeyboardArrowDownIcon fontSize=\"small\" />}\r\n          onClick={toggleDateRangeFilter}\r\n        >\r\n          {renderFilteringDateValue()}\r\n        </Button>\r\n\r\n        <Button\r\n          aria-controls=\"simple-menu\"\r\n          aria-haspopup=\"true\"\r\n          onClick={toggleMenu}\r\n          ref={anchorRef}\r\n          disabled={\r\n            !Countries || !Array.isArray(Countries) || !Countries.length\r\n          }\r\n          startIcon={\r\n            <Public\r\n              style={{ color: theme.palette.text.disabled }}\r\n              fontSize=\"small\"\r\n            />\r\n          }\r\n          endIcon={<KeyboardArrowDownIcon fontSize=\"small\" />}\r\n        >\r\n          {SelectedCountries.length > 0\r\n            ? `Within ${SelectedCountries.length} countries`\r\n            : \"Countries\"}\r\n        </Button>\r\n      </ButtonGroup>\r\n\r\n      <div style={{ position: \"relative\" }}>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          open={MenuOpen}\r\n          PaperProps={MenuProps.PaperProps}\r\n          keepMounted\r\n          onClose={closeMenu}\r\n          anchorEl={anchorRef.current}\r\n          style={{ paddingTop: 0 }}\r\n        >\r\n          <MenuItem\r\n            button\r\n            onClick={clearCountries}\r\n            // disabled={SelectedCountries.length < 1}\r\n          >\r\n            <ClearAllIcon style={{ margin: theme.spacing(1) }} />\r\n            Clear and show all\r\n          </MenuItem>\r\n          <Divider />\r\n\r\n          {Array.isArray(Countries) &&\r\n            Countries.map((name) => (\r\n              <MenuItem\r\n                alignItems=\"center\"\r\n                key={name}\r\n                onClick={() => {\r\n                  toggleCountry(name);\r\n                }}\r\n                value={name}\r\n                style={getStyles(name, personName, theme)}\r\n              >\r\n                <Checkbox\r\n                  color=\"secondary\"\r\n                  checked={countryIsSelected(name)}\r\n                  size=\"small\"\r\n                  disableRipple\r\n                />\r\n                {name}\r\n              </MenuItem>\r\n            ))}\r\n        </Menu>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(DateCountryFilter);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\r\nimport { DateRangePicker, DateRange } from \"materialui-daterange-picker\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport { useConfirm } from \"material-ui-confirm\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport { prettyTimelapse, timeSince } from \"../../helpers/time\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Divider,\r\n  IconButton,\r\n  LinearProgress,\r\n  Link,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  CircularProgress,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n  ButtonGroup,\r\n} from \"@material-ui/core\";\r\n\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport uiActions from \"../../actions/UI\";\r\nimport ScrapingThreadApi from \"../../api/ScrapingThread\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport sessionStore from \"../../store/session\";\r\nimport tableStore from \"../../store/Tables\";\r\nimport scrapingThreadsStore from \"../../store/ScrapingThreads\";\r\nimport CountryFilter from \"../Filters/CountryFilter\";\r\nimport TablePaginationActions from \"./Pagination\";\r\nimport EmptyTablePlaceholder from \"./EmptyPlaceholder\";\r\n\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport ActionTypes from \"../../constants/ActionTypes\";\r\nimport scrapingThreadsActions from \"../../actions/ScrapingThread\";\r\nimport {\r\n  Add,\r\n  AddCircle,\r\n  Delete,\r\n  Today,\r\n  AssignmentTurnedIn as AssignmentTurnedInIcon,\r\n  Public,\r\n  RssFeedTwoTone,\r\n  Search,\r\n} from \"@material-ui/icons\";\r\n\r\nimport tableActions from \"../../actions/Table\";\r\nimport TableNames from \"../../constants/Tables\";\r\nimport TableData from \"../../models/TableData\";\r\nimport DateCountryFilter from \"../Filters/DateCountryFilter\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableRow: {\r\n    height: 70,\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n  emptyRow: {\r\n    height: 70,\r\n    backgroundColor: \"white!important\",\r\n    \"&:first-child td\": {\r\n      paddingTop: \"8rem\",\r\n      paddingBottom: \"8rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst THIS_TABLE_NAME = TableNames.ADD_TRACK_URL;\r\n\r\nconst ManageUrlsTable = ({ filter }) => {\r\n  let [tableData, setTableData] = useState(\r\n    tableStore.getTableData(THIS_TABLE_NAME)\r\n  );\r\n  const [SelectedRows, setSelectedRows] = useState([]);\r\n  const [DateRange, setDateRange] = useState(null);\r\n\r\n  const HasTableData = tableData !== undefined;\r\n\r\n  if (!HasTableData) {\r\n    tableData = TableData.defaults(THIS_TABLE_NAME);\r\n  }\r\n  const confirm = useConfirm();\r\n  const rowsPerPage = tableData.rowsPerPage;\r\n  const page = tableData.page;\r\n  const countryFilter = tableData.countryFilter;\r\n  const dateRange = tableData.dateRange;\r\n  let rows = tableData.rows;\r\n\r\n  const IsLoadingResults = tableData.isLoading;\r\n  let hasInheritedRows = false;\r\n  if (IsLoadingResults && tableData.previousTableData) {\r\n    rows = tableData.previousTableData.rows;\r\n    hasInheritedRows = true;\r\n  }\r\n\r\n  const isLoadingResults = tableData ? tableData.isLoading : true;\r\n  const rowsLength = Array.isArray(rows) ? rows.length : 0;\r\n  const classes = useStyles();\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(rowsPerPage, rowsLength - page * rowsPerPage) +\r\n    (rowsLength > 1 ? 0 : 1);\r\n  const deleteSelectedRows = () => {\r\n    if (SelectedRows.length) {\r\n      confirm({\r\n        description: `Are you sure you want to delete ${SelectedRows.length} links?`,\r\n        title: `Delete ${SelectedRows.length} links`,\r\n      })\r\n        .then(async () => {\r\n          const res = await ScrapingThreadApi.Delete(SelectedRows);\r\n          if (res && res.success) {\r\n            uiActions.showSnackbar(`Links deleted successfully`, \"success\");\r\n            setSelectedRows([]);\r\n            setTimeout(() => {\r\n              syncTableData({});\r\n            });\r\n          }\r\n        })\r\n        .catch();\r\n    }\r\n  };\r\n  const selectAllRows = (evt) => {\r\n    const checked = evt.target.checked;\r\n    if (!checked) {\r\n      setSelectedRows([]);\r\n    } else if (checked) {\r\n      if (Array.isArray(rows)) {\r\n        setSelectedRows(rows.map((row) => row.threadId));\r\n      }\r\n    }\r\n  };\r\n  const syncTableData = ({\r\n    newPage,\r\n    newRowsPerPage,\r\n    newDateRange,\r\n    newCountryFilter,\r\n  }) => {\r\n    tableActions.createTableData({\r\n      rowsPerPage: newRowsPerPage !== undefined ? newRowsPerPage : rowsPerPage,\r\n      page:\r\n        newRowsPerPage !== -1 ? (newPage !== undefined ? newPage : page) : 0,\r\n      filter: filter || \"\",\r\n      tableName: THIS_TABLE_NAME,\r\n      previousRowCount:\r\n        tableData && tableData.totalRowsCount\r\n          ? tableData.totalRowsCount\r\n          : undefined,\r\n      dateRange: newDateRange !== undefined ? newDateRange : dateRange,\r\n      countryFilter:\r\n        newCountryFilter !== undefined ? newCountryFilter : countryFilter,\r\n    });\r\n  };\r\n  const handleChangePage = (event, newPage) => {\r\n    console.log(\"handleChangePage.newPage\", newPage);\r\n    syncTableData({ newPage });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    const newRowsPerPage = parseInt(event.target.value, 10);\r\n    syncTableData({ newRowsPerPage, newPage: 0 });\r\n  };\r\n\r\n  /**\r\n   * @type {Object} obj\r\n   * @type {TableData} obj.tableData\r\n   */\r\n  const onTableRowsDataUpdated = ({ tableData }) => {\r\n    if (tableData.tableName === THIS_TABLE_NAME) {\r\n      const foundTable = tableStore.getByTableName(THIS_TABLE_NAME);\r\n      console.log(\"foundTable\", foundTable);\r\n      setTableData(foundTable);\r\n    }\r\n  };\r\n  console.log(\"rendering\", tableData);\r\n\r\n  const onScrapingThreadCreated = () => {\r\n    setTimeout(() => {\r\n      syncTableData({ newPage: 0 });\r\n    });\r\n  };\r\n  const bindListeners = () => {\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_CREATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    tableStore.addChangeListener(\r\n      ActionTypes.Table.DATA_UPDATED,\r\n      onTableRowsDataUpdated\r\n    );\r\n    scrapingThreadsStore.addChangeListener(\r\n      ActionTypes.ScrapingThread.THREAD_CREATED,\r\n      onScrapingThreadCreated\r\n    );\r\n    return () => {\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_CREATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      tableStore.removeChangeListener(\r\n        ActionTypes.Table.DATA_UPDATED,\r\n        onTableRowsDataUpdated\r\n      );\r\n      scrapingThreadsStore.removeChangeListener(\r\n        ActionTypes.Table.ROW_ADDED,\r\n        onScrapingThreadCreated\r\n      );\r\n    };\r\n  };\r\n  const onRowSelectionChanged = (id) => {\r\n    console.log(SelectedRows);\r\n    const alreadySelectedIndex = SelectedRows.findIndex((c) => c === id);\r\n    const alreadySelected =\r\n      alreadySelectedIndex !== -1 && alreadySelectedIndex !== false;\r\n    if (alreadySelected) {\r\n      SelectedRows.splice(alreadySelectedIndex, 1);\r\n      setSelectedRows([...SelectedRows]);\r\n    } else {\r\n      setSelectedRows([id, ...SelectedRows]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Means data has not yet loaded nor requested\r\n    setTimeout(() => {\r\n      if (!HasTableData || filter !== tableData.filter) {\r\n        syncTableData({});\r\n      }\r\n    });\r\n\r\n    return bindListeners();\r\n  });\r\n  // if (rows.length <= 0) {\r\n  //   return <EmptyTablePlaceholder />;\r\n  // }\r\n\r\n  const handleCountryFilterChanged = (_countryFilter) => {\r\n    syncTableData({ newCountryFilter: _countryFilter });\r\n  };\r\n  const handleDateFilterChanged = (_dateRange) => {\r\n    syncTableData({ newDateRange: _dateRange });\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  const renderEmptyRows = () => {\r\n    if (rowsPerPage === rowsLength) {\r\n      return \"\";\r\n    }\r\n    const isJustFilling = rowsLength > 0;\r\n    const hasFilterApplied =\r\n      tableData.totalRowsCount < tableData.unfilteredRowsCount;\r\n    const _renderHint = () => {\r\n      if (hasFilterApplied) {\r\n        return (\r\n          <Typography\r\n            variant={isJustFilling ? \"body2\" : \"h6\"}\r\n            style={{ color: theme.palette.text.hint }}\r\n          >\r\n            Try changing filter options\r\n          </Typography>\r\n        );\r\n      }\r\n      if (!isJustFilling)\r\n        return (\r\n          <Typography variant=\"h6\" style={{ color: theme.palette.text.hint }}>\r\n            Add some links to get started\r\n          </Typography>\r\n        );\r\n    };\r\n    const _emptyRowContent = () => (\r\n      <TableCell colspan=\"6\">\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n          flexDirection=\"column\"\r\n        >\r\n          {!isJustFilling && (\r\n            <Search\r\n              style={{\r\n                color: theme.palette.text.disabled,\r\n                width: 48,\r\n                height: 48,\r\n              }}\r\n            />\r\n          )}\r\n\r\n          <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n            <Typography\r\n              variant={isJustFilling ? \"h6\" : \"h4\"}\r\n              style={{\r\n                color: isJustFilling\r\n                  ? theme.palette.text.hint\r\n                  : theme.palette.text.primary,\r\n              }}\r\n            >\r\n              No{rowsLength > 0 ? \" more\" : \"\"} links found\r\n            </Typography>\r\n          </Box>\r\n          {_renderHint()}\r\n        </Box>\r\n      </TableCell>\r\n    );\r\n\r\n    const _createRow = () => (\r\n      <TableRow\r\n        className={clsx({\r\n          [classes.tableRow]: true,\r\n          [classes.emptyRow]: true,\r\n        })}\r\n        key={Math.random()}\r\n      >\r\n        {_emptyRowContent()}\r\n      </TableRow>\r\n    );\r\n\r\n    return _createRow();\r\n  };\r\n  return (\r\n    <Table className={classes.table} aria-label=\"custom pagination table\">\r\n      {/* <LinearProgress\r\n        variant=\"indeterminate\"\r\n        color=\"secondary\"\r\n        style={{ height: 2, opacity: IsLoadingResults ? \"0.5\" : 0 }}\r\n      /> */}\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell component=\"th\" colspan=\"6\">\r\n            <Box display=\"flex\" width=\"100%\" position=\"relative\">\r\n              <div style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                <Checkbox\r\n                  size=\"small\"\r\n                  disabled={rows.length < 1}\r\n                  checked={rows.length && SelectedRows.length === rows.length}\r\n                  onChange={selectAllRows}\r\n                />\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: theme.spacing(1),\r\n                }}\r\n              >\r\n                <Tooltip\r\n                  title={`Permanently delete ${SelectedRows.length} links?`}\r\n                >\r\n                  <IconButton\r\n                    disabled={SelectedRows.length < 1}\r\n                    size=\"small\"\r\n                    onClick={deleteSelectedRows}\r\n                  >\r\n                    <Badge badgeContent={SelectedRows.length} color=\"secondary\">\r\n                      <Delete />\r\n                    </Badge>\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </div>\r\n              <div\r\n                style={{\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  marginLeft: theme.spacing(1),\r\n                }}\r\n              >\r\n                <DateCountryFilter\r\n                  Countries={tableData.availableCountries}\r\n                  onCountriesChanged={handleCountryFilterChanged}\r\n                  onDateRangeChanged={handleDateFilterChanged}\r\n                />\r\n              </div>\r\n            </Box>\r\n          </TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        {isLoadingResults && !hasInheritedRows\r\n          ? [...Array(rowsPerPage !== undefined ? rowsPerPage : 10).keys()].map(\r\n              (x) => (\r\n                <TableRow key={x} style={{ height: 56 }}>\r\n                  {/* {[...Array(3).keys()].map((c) => (\r\n                  <TableCell key={c} colSpan={6 / c}>\r\n                    <Skeleton animation=\"wave\" style={{ height: 48 }} />\r\n                  </TableCell>\r\n                ))} */}\r\n                  <TableCell width=\"45%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\">\r\n                    <Skeleton animation=\"wave\" style={{ width: \"75%\" }} />\r\n                  </TableCell>\r\n                  <TableCell width=\"27,5%\" align=\"right\">\r\n                    <Skeleton\r\n                      animation=\"wave\"\r\n                      style={{\r\n                        width: \"75%\",\r\n                        display: \"inline-block\",\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )\r\n          : rows.map((row, index) => {\r\n              const innerRow = (\r\n                <React.Fragment>\r\n                  <TableCell width=\"64px\">\r\n                    <Checkbox\r\n                      size=\"small\"\r\n                      checked={SelectedRows.includes(row.threadId)}\r\n                      onChange={(evt) => {\r\n                        onRowSelectionChanged(row.threadId);\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <Link href={row.url} target=\"_blank\">\r\n                      {row.url}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 160 }} align=\"left\">\r\n                    <Box\r\n                      display=\"inline-flex\"\r\n                      alignItems=\"center\"\r\n                      justifyContent=\"start\"\r\n                    >\r\n                      <Today\r\n                        style={{\r\n                          width: 18,\r\n                          height: 18,\r\n                          color: theme.palette.text.hint,\r\n                        }}\r\n                        //style={{ color: theme.palette.text.hint }}\r\n                      />\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        noWrap={true}\r\n                        style={{ marginLeft: theme.spacing(1) }}\r\n                      >\r\n                        {timeSince(row.age)}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 160 }} align=\"right\">\r\n                    <Box alignItems=\"center\" flexWrap=\"nowrap\" display=\"flex\">\r\n                      <AssignmentTurnedInIcon\r\n                        style={{\r\n                          width: 18,\r\n                          height: 18,\r\n                          color: theme.palette.text.hint,\r\n                        }}\r\n                      />\r\n\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        noWrap={true}\r\n                        style={{\r\n                          marginLeft: theme.spacing(1),\r\n                          whiteSpace: \"nowrap\",\r\n                        }}\r\n                      >\r\n                        {row.scrapedJobs} Inserted jobs\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                </React.Fragment>\r\n              );\r\n              const wrapComponent = (\r\n                <TableRow className={classes.tableRow} key={row.uuid}>\r\n                  {innerRow}\r\n                </TableRow>\r\n              );\r\n              return wrapComponent;\r\n            })}\r\n        {!IsLoadingResults && renderEmptyRows()}\r\n      </TableBody>\r\n      <TableFooter>\r\n        <TableRow>\r\n          {rowsLength > 0 && (\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: \"All\", value: -1 }]}\r\n              colSpan={3}\r\n              count={tableData.totalRowsCount}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { \"aria-label\": \"rows per page\" },\r\n                native: true,\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          )}\r\n        </TableRow>\r\n      </TableFooter>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default ManageUrlsTable;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport LinkIcon from \"@material-ui/icons/Link\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Divider,\r\n  Input,\r\n  TableHead,\r\n  TextField,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  InputAdornment,\r\n  ButtonGroup,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport sessionStore from \"../store/session\";\r\nimport ManagaUrlsTable from \"../components/Tables/ManageUrls\";\r\nimport dispatcher from \"../dispatcher\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n});\r\nlet filterTimeout = undefined;\r\nexport default function ManageUrlsView() {\r\n  const [Filter, setFilter] = useState(\"\");\r\n  const classes = useStyles2();\r\n\r\n  const history = useHistory();\r\n\r\n  const theme = useTheme();\r\n\r\n  const onFilterChanged = (f) => {\r\n    clearTimeout(filterTimeout);\r\n    filterTimeout = setTimeout(() => {\r\n      console.log(\"Setting filter\");\r\n      setFilter(f);\r\n    }, 500);\r\n  };\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <div\r\n        style={{\r\n          padding: theme.spacing(2),\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          flexWrap: \"nowrap\",\r\n        }}\r\n      >\r\n        <FormControl fullWidth size=\"small\" className={classes.margin}>\r\n          <OutlinedInput\r\n            id=\"standard-adornment-amount\"\r\n            size=\"small\"\r\n            placeholder=\"Search URLs\"\r\n            onChange={(evt) => {\r\n              onFilterChanged(evt.target.value);\r\n            }}\r\n            onKeyPress={(evt) => {\r\n              onFilterChanged(evt.target.value);\r\n            }}\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          disableElevation\r\n          startIcon={<SearchIcon />}\r\n          style={{ whiteSpace: \"nowrap\", marginLeft: theme.spacing(2) }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </div>\r\n      <Divider />\r\n      <ManagaUrlsTable filter={Filter} />\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst FAQView = () => {\r\n  return (\r\n    <img\r\n      style={{ width: 320, height: \"auto\" }}\r\n      src=\"https://media.makeameme.org/created/what-the-faq-lj9cpd.jpg\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default FAQView;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport uiActions from \"../actions/UI\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { Backdrop } from \"@material-ui/core\";\r\nimport AddTrackUrlsView from \"../views/AddTrackUrls\";\r\nimport LoginView from \"../views/Login\";\r\nimport ManageUsersView from \"../views/ManageUsers\";\r\nimport AddUsersView from \"../views/AddUser\";\r\nimport ManageUrlsView from \"../views/ManageUrls\";\r\nimport sessionStore from \"../store/session\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport FAQView from \"../views/FAQ\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appView: {\r\n    overflowY: \"auto\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    flex: 1,\r\n    background: \"rgb(250,250,250)\",\r\n    marginTop: 64,\r\n    padding: theme.spacing(2),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n}));\r\n\r\nconst AppView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.appView}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={AddTrackUrlsView} />\r\n        <Route exact path=\"/login\" component={LoginView} />\r\n        <Route exact path=\"/faq\" component={FAQView} />\r\n        <Route exact path=\"/manage-users\" component={ManageUsersView} />\r\n        <Route exact path=\"/manage-urls\" component={ManageUrlsView} />\r\n        <Route exact path=\"/add-user\" component={AddUsersView} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\nimport {\r\n  Drawer,\r\n  Avatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItem,\r\n  AppBar,\r\n  Typography,\r\n  Toolbar,\r\n  Divider,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nimport AppSnackbar from \"./AppSnackbar\";\r\n\r\nimport sessionActions from \"../actions/Session\";\r\n\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  Link as LinkIcon,\r\n  Code as CodeIcon,\r\n  AccountCircle as AccountIcon,\r\n  Help as HelpIcon,\r\n  Timeline as TimelineIcon,\r\n  SupervisedUserCircle as SupervisedUserCircleIcon,\r\n  PowerSettingsNew as PowerSettingsNewIcon,\r\n  AddCircleOutline as AddCircleOutlineIcon,\r\n} from \"@material-ui/icons\";\r\nimport AppView from \"./AppView\";\r\nimport sessionStore from \"../store/session\";\r\nimport ActionTypes from \"../constants/ActionTypes\";\r\nimport logoIconSvg from \"../assets/l4c.svg\";\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    height: 32,\r\n    width: 32,\r\n    fontSize: theme.typography.body1.fontSize,\r\n    marginLeft: -3,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    background: \"white\",\r\n    color: \"rgb(127, 127, 127)\",\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  drawerHeader: {\r\n    height: 64,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n    backgroundColor: \"rgb(52, 58, 64)\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: \"58px !important\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n\r\n  drawerPaper: {\r\n    backgroundColor: \"rgb(52, 58, 64)\",\r\n    color: \"#c2c7d0\",\r\n    \"& .MuiListItemIcon-root\": {\r\n      color: \"#c2c7d0\",\r\n    },\r\n    \"& .MuiDivider-root\": {\r\n      backgroundColor: \"#c2c7d02e\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction AppContents() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n\r\n  const [IsAdmin, setIsAdmin] = useState(true);\r\n  const [User, setUser] = useState(sessionStore.getUser());\r\n\r\n  const [isAuthenticated, setIsAuthenticated] = useState(\r\n    sessionStore.isAuthenticated()\r\n  );\r\n\r\n  const onAuthenticationStatusChanged = () => {\r\n    setIsAuthenticated(sessionStore.isAuthenticated());\r\n  };\r\n  useEffect(() => {\r\n    sessionStore.addChangeListener(\r\n      ActionTypes.Session.USER_DATA_UPDATED,\r\n      onAuthenticationStatusChanged\r\n    );\r\n    return () => {\r\n      sessionStore.removeChangeListener(\r\n        ActionTypes.Session.USER_DATA_UPDATED,\r\n        onAuthenticationStatusChanged\r\n      );\r\n    };\r\n  });\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const location = useLocation();\r\n\r\n  const renderShortLetters = () => {\r\n    if (!User || !User.name) {\r\n      return \"\";\r\n    }\r\n    const fullName = User.name;\r\n    let shortLetters = \"\";\r\n    const nameParts = fullName.split(\" \");\r\n    if (nameParts.length >= 2) {\r\n      shortLetters =\r\n        nameParts[0].substring(0, 1) + nameParts[1].substring(0, 1);\r\n    } else {\r\n      shortLetters = nameParts[0].substring(0, 2);\r\n    }\r\n    // alert(fullName);\r\n    return shortLetters;\r\n  };\r\n  console.log(\"isAuthenticated\", isAuthenticated);\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      {isAuthenticated && User && User.name && (\r\n        <React.Fragment>\r\n          <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n              [classes.appBarShift]: isAuthenticated && open,\r\n            })}\r\n          >\r\n            <Toolbar>\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={classes.menuButton}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Button\r\n                variant=\"text\"\r\n                color={\r\n                  location.pathname === \"/\" || location.pathname === \"\"\r\n                    ? \"secondary\"\r\n                    : \"rgb(127, 127, 127)\"\r\n                }\r\n                startIcon={\r\n                  <AddCircleOutlineIcon\r\n                    color={\r\n                      location.pathname === \"/\" || location.pathname === \"\"\r\n                        ? \"secondary\"\r\n                        : \"rgb(127, 127, 127)\"\r\n                    }\r\n                  />\r\n                }\r\n                component={Link}\r\n                to=\"/\"\r\n              >\r\n                Crawl URLs\r\n              </Button>\r\n              <Button\r\n                variant=\"text\"\r\n                style={{ marginLeft: theme.spacing(1) }}\r\n                component={Link}\r\n                to=\"/manage-urls\"\r\n                startIcon={\r\n                  <EditIcon\r\n                    color={\r\n                      location.pathname === \"/manage-urls\"\r\n                        ? \"secondary\"\r\n                        : \"rgb(127, 127, 127)\"\r\n                    }\r\n                  />\r\n                }\r\n                color={\r\n                  location.pathname === \"/manage-urls\"\r\n                    ? \"secondary\"\r\n                    : theme.palette.text.hint\r\n                }\r\n              >\r\n                Manage URLs\r\n              </Button>\r\n            </Toolbar>\r\n          </AppBar>\r\n\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n              [classes.drawerOpen]: open,\r\n              [classes.drawerClose]: !open,\r\n              [classes.hide]: !isAuthenticated,\r\n            })}\r\n            classes={{\r\n              paper: clsx({\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n                [classes.drawerPaper]: true,\r\n              }),\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                flexDirection: \"column\",\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <div>\r\n                <div className={classes.drawerHeader}>\r\n                  <List>\r\n                    <ListItem button>\r\n                      <img style={{ width: 32 }} src={logoIconSvg} alt=\"yes\" />\r\n                      <Typography\r\n                        variant=\"h6\"\r\n                        style={{ marginLeft: theme.spacing(3) }}\r\n                      >\r\n                        Linksforcash\r\n                      </Typography>\r\n                    </ListItem>\r\n                  </List>\r\n                </div>\r\n                <Divider />\r\n                <List>\r\n                  <ListItem button key={\"userId\"}>\r\n                    <ListItemIcon>\r\n                      <Avatar className={[classes.orange, classes.avatar]}>\r\n                        {renderShortLetters()}\r\n                      </Avatar>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={User.name || User.username} />\r\n                  </ListItem>\r\n                </List>\r\n                <Divider />\r\n                <List>\r\n                  <ListItem button key={\"stats\"}>\r\n                    <ListItemIcon>\r\n                      <TimelineIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\"Statistics\"} />\r\n                  </ListItem>\r\n                  <ListItem\r\n                    button\r\n                    key={\"FAQ\"}\r\n                    component={Link}\r\n                    to=\"/faq\"\r\n                    selected={location.pathname === \"/faq\"}\r\n                  >\r\n                    <ListItemIcon>\r\n                      <HelpIcon />\r\n                    </ListItemIcon>\r\n                    <ListItemText primary={\"FAQ\"} />\r\n                  </ListItem>\r\n                </List>\r\n                <Divider />\r\n                {IsAdmin && (\r\n                  <React.Fragment>\r\n                    <List>\r\n                      <ListItem button key={\"user-stats\"}>\r\n                        <ListItemIcon>\r\n                          <SupervisedUserCircleIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"User Statistics\"} />\r\n                      </ListItem>\r\n                      <ListItem button key={\"tracked-urls\"}>\r\n                        <ListItemIcon>\r\n                          <LinkIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Tracked URLs\"} />\r\n                      </ListItem>\r\n                      <ListItem button key={\"xml\"}>\r\n                        <ListItemIcon>\r\n                          <CodeIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"XML\"} />\r\n                      </ListItem>\r\n                      <ListItem\r\n                        button\r\n                        key={\"users\"}\r\n                        selected={location.pathname === \"/manage-users\"}\r\n                        component={Link}\r\n                        to=\"/manage-users\"\r\n                      >\r\n                        <ListItemIcon>\r\n                          <AccountIcon />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Users\"} />\r\n                      </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n              <List>\r\n                <ListItem button key={\"users\"} onClick={sessionActions.logout}>\r\n                  <ListItemIcon>\r\n                    <PowerSettingsNewIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={\"Disconnect\"} />\r\n                </ListItem>\r\n              </List>\r\n            </div>\r\n          </Drawer>\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <AppView />\r\n        <AppSnackbar />\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nexport default React.memo(AppContents);\r\n","import React from \"react\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nconst AppPreload = () => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"fixed\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n        top: 0,\r\n        left: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <CircularProgress style={{ width: 54, height: 54 }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AppPreload);\r\n","import {\r\n  createMuiTheme,\r\n  makeStyles,\r\n  ThemeProvider,\r\n} from \"@material-ui/core/styles\";\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontSize: 14,\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport AppContents from \"./components/AppContents\";\nimport { ConfirmProvider } from \"material-ui-confirm\";\nimport sessionActions from \"./actions/Session\";\nimport sessionStore from \"./store/session\";\nimport AppPreload from \"./components/AppPreload\";\nimport ActionTypes from \"./constants/ActionTypes\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport defaultTheme from \"./theme\";\nexport default function App() {\n  const [ShowPreload, setShowPreload] = useState(true);\n  const history = useHistory();\n\n  const onIsAuthenticatingChanged = (data) => {\n    const isAuthenticating = sessionStore.isAuthenticating();\n    const isAuthenticated = sessionStore.isAuthenticated();\n    const canAuthenticate = !!sessionStore.getAuthenticationToken();\n    if (canAuthenticate && !isAuthenticated && !isAuthenticating) {\n      if (!ShowPreload) setShowPreload(true);\n      setTimeout(() => {\n        sessionActions.tryAuthentication();\n      });\n    } else if (!isAuthenticated && !canAuthenticate) {\n      history.push(\"/login\");\n      if (ShowPreload) setShowPreload(false);\n    } else if (isAuthenticated) {\n      if (ShowPreload) setShowPreload(false);\n    }\n  };\n\n  onIsAuthenticatingChanged();\n  useEffect(() => {\n    sessionStore.addChangeListener(\n      ActionTypes.Session.IS_AUTHENTICATING,\n      onIsAuthenticatingChanged\n    );\n\n    sessionStore.addChangeListener(\n      ActionTypes.Session.USER_DATA_UPDATED,\n      onIsAuthenticatingChanged\n    );\n    return () => {\n      sessionStore.removeChangeListener(\n        ActionTypes.Session.IS_AUTHENTICATING,\n        onIsAuthenticatingChanged\n      );\n      sessionStore.removeChangeListener(\n        ActionTypes.Session.USER_DATA_UPDATED,\n        onIsAuthenticatingChanged\n      );\n    };\n  });\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <ConfirmProvider>\n        {ShowPreload ? <AppPreload /> : <AppContents />}\n      </ConfirmProvider>\n    </ThemeProvider>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n//import \"fontsource-roboto\";\nimport \"typeface-roboto\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/**\r\n * @typedef {Object} DateRange\r\n * @property {number} dateStart\r\n * @property {number} dateEnd\r\n */\r\nexport default class TableData {\r\n  /**\r\n   * @type {Object[]}\r\n   */\r\n  rows;\r\n  /**\r\n   * @type {number}\r\n   */\r\n  rowsPerPage;\r\n  /**\r\n   * @type {number}\r\n   */\r\n  page;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  filter;\r\n  /**\r\n   * @type {string}\r\n   */\r\n  tableName;\r\n\r\n  /**\r\n   * @type {DateRange}\r\n   */\r\n  dateRange;\r\n\r\n  /**\r\n   * Appliable to specific tables only\r\n   * @type {string[]}\r\n   */\r\n  countryFilter;\r\n\r\n  ///////////////////////////////////\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  isLoading;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  totalRowsCount;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  unfilteredRowsCount;\r\n\r\n  /**\r\n   * @type {string}\r\n   */\r\n  hash;\r\n\r\n  /**\r\n   * @type {TableData}\r\n   */\r\n  previousTableData;\r\n\r\n  /**\r\n   * @type {boolean}\r\n   */\r\n  scrapingFinished;\r\n\r\n  /**\r\n   * @type {number}\r\n   */\r\n  scrapedJobs;\r\n\r\n  // Uniquely identify each TableData representation by a hash\r\n  createHash() {\r\n    const hashable = [\r\n      this.tableName,\r\n      this.rowsPerPage,\r\n      this.filter,\r\n      this.page,\r\n      this.countryFilter.join(),\r\n      Object.values(this.dateRange).join(),\r\n    ].reduce((a, b) => {\r\n      return (a || \"\").toString() + (b || \"\").toString();\r\n    });\r\n    return Buffer.from(hashable).toString(\"base64\");\r\n  }\r\n\r\n  static defaults(tableName) {\r\n    return new TableData({\r\n      tableName,\r\n      rowsPerPage: 5,\r\n      page: 0,\r\n      filter: 0,\r\n      isLoading: true,\r\n      totalRowsCount: -1,\r\n      rows: [],\r\n      dateRange: {},\r\n      countryFilter: [],\r\n      unfilteredRowsCount: 0,\r\n    });\r\n  }\r\n\r\n  constructor({\r\n    tableName,\r\n    rows,\r\n    rowsPerPage,\r\n    page,\r\n    filter,\r\n    isLoading,\r\n    totalRowsCount,\r\n    dateRange,\r\n    countryFilter,\r\n    unfilteredRowsCount,\r\n  }) {\r\n    this.rows = rows;\r\n    this.rowsPerPage = rowsPerPage !== undefined ? rowsPerPage : 5;\r\n    this.filter = filter || \"\";\r\n    this.page = page !== undefined ? page : 0;\r\n    this.tableName = tableName;\r\n    this.totalRowsCount = totalRowsCount;\r\n    this.isLoading = isLoading || true;\r\n    this.countryFilter = Array.isArray(countryFilter) ? countryFilter : [];\r\n    this.dateRange =\r\n      typeof dateRange === \"object\" && Object.values(dateRange).length > 0\r\n        ? dateRange\r\n        : {};\r\n    this.unfilteredRowsCount = unfilteredRowsCount || 0;\r\n    this.hash = this.createHash();\r\n  }\r\n}\r\n","const Errors = {\r\n  ERR_UNKNOWN: \"Uknown\",\r\n  ERR_INSUFFICIENT_BALANCE: \"Insufficient balance\",\r\n  ERR_BETS_CLOSED: \"Bets already closed\",\r\n  ERR_INVALID_CURRENCY: \"Choose a currency to bet with.\",\r\n  ERR_ROUND_INEXISTENT: \"Round does not exist\",\r\n  ERR_MESSAGE_TOO_SHORT: \"Message too short\",\r\n  ERR_MESSAGE_TOO_LONG: \"Message too long\",\r\n  ERR_INVALID_BET: \"Error while placing your bet.\",\r\n  ERR_WAIT_BEFORE_SENDING_MESSAGE: \"Please wait {0}s to text again.\",\r\n  ERR_UNAUTHENTICATED: \"It seems you're not logged in...\",\r\n  ERR_INVALID_PICTURE: \"Please try with another picture.\",\r\n  ERR_USER_NOT_FOUND: \"Invalid credentials\",\r\n  ERR_CREDENTIALS_INVALID: \"Invalid credentials\",\r\n  ERR_INVALID_URL: \"The URL appears to be invalid\",\r\n  ERR_INSUFFICIENT_PERMISSIONS: \"Insufficient privileges\",\r\n  ERR_CHECK_FIELDS: \"All fields must be correctly filled\",\r\n  ERR_EMAIL_ALREADY_REGISTERED: \"Email already registered\",\r\n  ERR_USERNAME_ALREADY_REGISTERED: \"Username already registered\",\r\n  ERR_CANNOT_DELETE_YOURSELF: \"Cannot delete yourself\",\r\n};\r\n\r\nexport default Errors;\r\n"],"sourceRoot":""}